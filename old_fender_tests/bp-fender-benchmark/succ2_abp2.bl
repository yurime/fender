shared B0, B1, B2, B3, B4, B5, B6, B7;
local t0, t1, t2, t3, t4, t5, t6, t7, ifvar7;

init
11: store B0 = *;
12: store B1 = *;
13: store B2 = *;
14: store B3 = *;
15: store B4 = *;
16: store B5 = *;
17: store B6 = *;
18: store B7 = *;

19: load t0 = B0;
20: load t1 = B1;
21: load t2 = B2;
22: load t3 = B3;
23: load t4 = B4;
24: load t5 = B5;
25: load t6 = B6;
26: load t7 = B7;

27: assume(!((t0 != 0 && t1 != 0) || (t2 != 0 && t3 != 0) || (t4 != 0 && t5 != 0))); 


/* Statement: msg = 0 */
28: nop; 
29:  load t0 = B0;
30:  load t1 = B1;
31:  load t2 = B2;
32:  load t3 = B3;
33:  load t4 = B4;
34:  load t5 = B5;
35:  load t6 = B6;
36:  load t7 = B7;

 /* update predicate - B0: (msg = 0) */
37:   store B0 = choose(true, false);


 /* update predicate - B1: (msg = 1) */
38:   store B1 = choose(false, true);


 /* update predicate - B7: (lMsg = msg) */
39:   store B7 = choose((t0 != 0 && t7 != 0), true);
40: assume(!((t0 != 0 && t1 != 0) || (t2 != 0 && t3 != 0) || (t4 != 0 && t5 != 0))); 


/* Statement: ack = 0 */
41: nop; 
42:  load t0 = B0;
43:  load t1 = B1;
44:  load t2 = B2;
45:  load t3 = B3;
46:  load t4 = B4;
47:  load t5 = B5;
48:  load t6 = B6;
49:  load t7 = B7;

 /* update predicate - B2: (ack = 0) */
50:   store B2 = choose(true, false);


 /* update predicate - B3: (ack = 1) */
51:   store B3 = choose(false, true);


 /* update predicate - B6: (lAck = ack) */
52:   store B6 = choose((t2 != 0 && t6 != 0), (t2 != 0 && t6 == 0) || (t2 == 0 && t6 != 0) || (t3 != 0 && t6 != 0));


53: assume(!((t0 != 0 && t1 != 0) || (t2 != 0 && t3 != 0) || (t4 != 0 && t5 != 0))); 

/* Reset local variables */ 
54: t0 = 0; 
55: t1 = 0; 
56: t2 = 0; 
57: t3 = 0; 
58: t4 = 0; 
59: t5 = 0; 
60: t6 = 0; 
61: t7 = 0; 
62: ifvar7 = 0; 


process 1

/* Statement: lSSt = msg */
3: nop; 
63: begin_atomic;
64:  load t0 = B0;
65:  load t1 = B1;
66:  load t2 = B2;
67:  load t3 = B3;
68:  load t4 = B4;
69:  load t5 = B5;
70:  load t6 = B6;
71:  load t7 = B7;

 /* update predicate - B4: (lSSt = 0) */
72:   store B4 = choose((t0 != 0), (t0 == 0) || (t1 != 0));


 /* update predicate - B5: (lSSt = 1) */
73:   store B5 = choose((t1 != 0), (t0 != 0) || (t1 == 0));


74: assume(!((t0 != 0 && t1 != 0) || (t2 != 0 && t3 != 0) || (t4 != 0 && t5 != 0))); 

75: end_atomic;

/* Statement: lAck = ack */
4: nop; 
76: begin_atomic;
77:  load t0 = B0;
78:  load t1 = B1;
79:  load t2 = B2;
80:  load t3 = B3;
81:  load t4 = B4;
82:  load t5 = B5;
83:  load t6 = B6;
84:  load t7 = B7;

 /* update predicate - B6: (lAck = ack) */
85:   store B6 = choose(true, false);


86: assume(!((t0 != 0 && t1 != 0) || (t2 != 0 && t3 != 0) || (t4 != 0 && t5 != 0))); 

87: end_atomic;

/* Statement: if (lAck = lSSt) */ 
5: nop; 
91: begin_atomic;
92: ifvar7 = 0;
93: load t0 = B0;
94: load t1 = B1;
95: load t2 = B2;
96: load t3 = B3;
97: load t4 = B4;
98: load t5 = B5;
99: load t6 = B6;
100: load t7 = B7;
101: end_atomic;

102: if (*) goto 88;
103: if (true) goto 89;
88: assume(!((t2 != 0 && t4 != 0 && t6 == 0) || (t2 != 0 && t4 == 0 && t6 != 0) || (t2 != 0 && t5 != 0 && t6 != 0) || (t2 == 0 && t4 != 0 && t6 != 0) || (t3 != 0 && t4 != 0 && t6 != 0) || (t3 != 0 && t5 != 0 && t6 == 0) || (t3 != 0 && t5 == 0 && t6 != 0) || (t3 == 0 && t5 != 0 && t6 != 0))); 
104: ifvar7 = 1;

/* Statement: msg = 1 - lSSt */
6: nop; 
105: begin_atomic;
106:  load t0 = B0;
107:  load t1 = B1;
108:  load t2 = B2;
109:  load t3 = B3;
110:  load t4 = B4;
111:  load t5 = B5;
112:  load t6 = B6;
113:  load t7 = B7;

 /* update predicate - B0: (msg = 0) */
114:   store B0 = choose((t5 != 0), (t4 != 0) || (t5 == 0));


 /* update predicate - B1: (msg = 1) */
115:   store B1 = choose((t4 != 0), (t4 == 0) || (t5 != 0));


 /* update predicate - B7: (lMsg = msg) */
116:   store B7 = choose((t0 != 0 && t5 != 0 && t7 != 0) || (t1 != 0 && t4 != 0 && t7 != 0), (t0 != 0 && t4 != 0 && t7 != 0) || (t0 != 0 && t5 != 0 && t7 == 0) || (t0 != 0 && t5 == 0 && t7 != 0) || (t0 == 0 && t5 != 0 && t7 != 0) || (t1 != 0 && t4 != 0 && t7 == 0) || (t1 != 0 && t4 == 0 && t7 != 0) || (t1 != 0 && t5 != 0 && t7 != 0) || (t1 == 0 && t4 != 0 && t7 != 0));
117: assume(!((t0 != 0 && t1 != 0) || (t2 != 0 && t3 != 0) || (t4 != 0 && t5 != 0))); 

118: end_atomic;
89:  if (ifvar7 == 0) goto 119; 
120: if (true) goto 90;
119: assume(!((t2 != 0 && t4 != 0 && t6 != 0) || (t3 != 0 && t5 != 0 && t6 != 0))); 
90: nop;

9:   if (true) goto 3; 


process 2

/* Statement: lMsg = msg */
3: nop; 
121: begin_atomic;
122:  load t0 = B0;
123:  load t1 = B1;
124:  load t2 = B2;
125:  load t3 = B3;
126:  load t4 = B4;
127:  load t5 = B5;
128:  load t6 = B6;
129:  load t7 = B7;

 /* update predicate - B7: (lMsg = msg) */
130:   store B7 = choose(true, false);
131: assume(!((t0 != 0 && t1 != 0) || (t2 != 0 && t3 != 0) || (t4 != 0 && t5 != 0))); 

132: end_atomic;

/* Statement: ack = lMsg */
8: nop; 
133: begin_atomic;
134:  load t0 = B0;
135:  load t1 = B1;
136:  load t2 = B2;
137:  load t3 = B3;
138:  load t4 = B4;
139:  load t5 = B5;
140:  load t6 = B6;
141:  load t7 = B7;

 /* update predicate - B2: (ack = 0) */
142:   store B2 = choose((t0 != 0 && t7 != 0), true);


 /* update predicate - B3: (ack = 1) */
143:   store B3 = choose((t1 != 0 && t7 != 0), (t0 != 0 && t7 != 0) || (t1 != 0 && t7 == 0) || (t1 == 0 && t7 != 0));


 /* update predicate - B6: (lAck = ack) */
144:   store B6 = choose((t0 != 0 && t2 != 0 && t6 != 0 && t7 != 0) || (t1 != 0 && t3 != 0 && t6 != 0 && t7 != 0), (t0 != 0 && t2 != 0 && t6 != 0 && t7 == 0) || (t0 != 0 && t2 != 0 && t6 == 0 && t7 != 0) || (t0 != 0 && t2 == 0 && t6 != 0 && t7 != 0) || (t0 != 0 && t3 != 0 && t6 != 0 && t7 != 0) || (t0 == 0 && t2 != 0 && t6 != 0 && t7 != 0) || (t1 != 0 && t2 != 0 && t6 != 0 && t7 != 0) || (t1 != 0 && t3 != 0 && t6 != 0 && t7 == 0) || (t1 != 0 && t3 != 0 && t6 == 0 && t7 != 0) || (t1 != 0 && t3 == 0 && t6 != 0 && t7 != 0) || (t1 == 0 && t3 != 0 && t6 != 0 && t7 != 0));


145: assume(!((t0 != 0 && t1 != 0) || (t2 != 0 && t3 != 0) || (t4 != 0 && t5 != 0))); 

146: end_atomic;
9:   if (true) goto 3; 

assert always (B0 != 0) || (B1 != 0); 

