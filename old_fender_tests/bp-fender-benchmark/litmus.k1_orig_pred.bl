shared B0;
local t0, ifvar12, ifvar16;

init
51: store B0 = *;

52: load t0 = B0;

53: assume(!(false)); 


/* Statement: a = 1 */
54: nop; 
55:  load t0 = B0;

 /* update predicate - B0: (a = 2) */
56:   store B0 = choose(false, true);
57: assume(!(false)); 


/* Statement: overflow = 0 */
58: nop; 
59:  load t0 = B0;

60: assume(!(false)); 

/* Reset local variables */ 
61: t0 = 0; 
62: ifvar12 = 0; 
63: ifvar16 = 0; 


process 1
/* initialize counters */


64: begin_atomic;


/* Statement: a_cnt_p1 = 0 */
65: nop; 
66:  load t0 = B0;

67: assume(!(false)); 

68: end_atomic;

69: begin_atomic;

/* store a = 2; */



/* Statement: a_cnt_p1 = a_cnt_p1 + 1 */
70: nop; 
71:  load t0 = B0;

72: assume(!(false)); 


/* Statement: if (a_cnt_p1 = 2) */ 
73: nop; 
77: ifvar12 = 0;
78: load t0 = B0;

79: if (*) goto 74;
80: if (true) goto 75;
74: assume(!(false)); 
81: ifvar12 = 1;

/* Statement: overflow = 1 */
82: nop; 
83:  load t0 = B0;

84: assume(!(false)); 

75:  if (ifvar12 == 0) goto 85; 
86: if (true) goto 76;
85: assume(!(false)); 
76: nop;


/* Statement: if (a_cnt_p1 = 1) */ 
87: nop; 
91: ifvar16 = 0;
92: load t0 = B0;

93: if (*) goto 88;
94: if (true) goto 89;
88: assume(!(false)); 
95: ifvar16 = 1;

/* Statement: a_1_p1 = 2 */
96: nop; 
97:  load t0 = B0;

98: assume(!(false)); 

89:  if (ifvar16 == 0) goto 99; 
100: if (true) goto 90;
99: assume(!(false)); 
90: nop;

101: end_atomic;

102: begin_atomic;


/* Statement: a = a_1_p1 */
103: nop; 
104:  load t0 = B0;

 /* update predicate - B0: (a = 2) */
105:   store B0 = choose(false, false);
106: assume(!(false)); 


/* Statement: a_cnt_p1 = a_cnt_p1 - 1 */
107: nop; 
108:  load t0 = B0;

109: assume(!(false)); 

110: end_atomic;

assert final (B0 != 0); 

