shared B0, B1;
local t0, t1, ifvar5;

init
51: store B0 = *;
52: store B1 = *;


/* Statement: x = 1 */
53: nop; 
54:  load t0 = B0;
55:  load t1 = B1;

 /* update predicate - B0: (x > y) */
60:  if ((t0 != 0 && t1 == 0)) goto 59; 
61:   if (true) goto 56;
59:   store B0 = 1;
62:   if (true) goto 58;
56:  if ((t0 == 0 && t1 != 0)) goto 63; 
64:   if (true) goto 57;
63:   store B0 = 0;
65:   if (true) goto 58;
57:   store B0 = *;
58:   nop;


 /* update predicate - B1: (x > 0) */
70:  if ((t0 != 0) || (t0 == 0) || (t1 != 0) || (t1 == 0)) goto 69; 
71:   if (true) goto 66;
69:   store B1 = 1;
72:   if (true) goto 68;
66:  if (false) goto 73; 
74:   if (true) goto 67;
73:   store B1 = 0;
75:   if (true) goto 68;
67:   store B1 = *;
68:   nop;


/* Statement: y = 1 */
76: nop; 
77:  load t0 = B0;
78:  load t1 = B1;

 /* update predicate - B0: (x > y) */
83:  if (false) goto 82; 
84:   if (true) goto 79;
82:   store B0 = 1;
85:   if (true) goto 81;
79:  if ((t1 == 0)) goto 86; 
87:   if (true) goto 80;
86:   store B0 = 0;
88:   if (true) goto 81;
80:   store B0 = *;
81:   nop;


 /* update predicate - B1: (x > 0) */
93:  if ((t1 != 0)) goto 92; 
94:   if (true) goto 89;
92:   store B1 = 1;
95:   if (true) goto 91;
89:  if ((t1 == 0)) goto 96; 
97:   if (true) goto 90;
96:   store B1 = 0;
98:   if (true) goto 91;
90:   store B1 = *;
91:   nop;

/* Reset local variables */ 
99: t0 = 0; 
100: t1 = 0; 
101: ifvar5 = 0; 


process 1

/* Statement: if (x > y) */ 
2: nop; 
105: begin_atomic;
106: ifvar5 = 0;
107: load t0 = B0;
108: load t1 = B1;
109: end_atomic;

110: if (*) goto 102;
111: if (true) goto 103;
102: assume(!((t0 == 0))); 
112: ifvar5 = 1;
3:   if (true) goto 5; 

103:  if (ifvar5 == 0) goto 113; 
114: if (true) goto 104;
113: assume(!((t0 != 0))); 
4:   if (true) goto 6; 

104: nop;


/* Statement: x = x - y */
5: nop; 
115: begin_atomic;
116:  load t0 = B0;
117:  load t1 = B1;

 /* update predicate - B0: (x > y) */
122:  if ((t0 != 0 && t1 == 0)) goto 121; 
123:   if (true) goto 118;
121:   store B0 = 1;
124:   if (true) goto 120;
118:  if ((t0 == 0 && t1 != 0)) goto 125; 
126:   if (true) goto 119;
125:   store B0 = 0;
127:   if (true) goto 120;
119:   store B0 = *;
120:   nop;


 /* update predicate - B1: (x > 0) */
132:  if ((t0 != 0)) goto 131; 
133:   if (true) goto 128;
131:   store B1 = 1;
134:   if (true) goto 130;
128:  if ((t0 == 0)) goto 135; 
136:   if (true) goto 129;
135:   store B1 = 0;
137:   if (true) goto 130;
129:   store B1 = *;
130:   nop;

138: end_atomic;
6: nop; 


process 2

/* Statement: x = x + 1 */
2: nop; 
139: begin_atomic;
140:  load t0 = B0;
141:  load t1 = B1;

 /* update predicate - B0: (x > y) */
146:  if ((t0 != 0)) goto 145; 
147:   if (true) goto 142;
145:   store B0 = 1;
148:   if (true) goto 144;
142:  if (false) goto 149; 
150:   if (true) goto 143;
149:   store B0 = 0;
151:   if (true) goto 144;
143:   store B0 = *;
144:   nop;


 /* update predicate - B1: (x > 0) */
156:  if ((t1 != 0)) goto 155; 
157:   if (true) goto 152;
155:   store B1 = 1;
158:   if (true) goto 154;
152:  if (false) goto 159; 
160:   if (true) goto 153;
159:   store B1 = 0;
161:   if (true) goto 154;
153:   store B1 = *;
154:   nop;

162: end_atomic;
3:   if(*) goto 2; 


process 3

/* Statement: x = x - 1 */
2: nop; 
163: begin_atomic;
164:  load t0 = B0;
165:  load t1 = B1;

 /* update predicate - B0: (x > y) */
170:  if (false) goto 169; 
171:   if (true) goto 166;
169:   store B0 = 1;
172:   if (true) goto 168;
166:  if ((t0 == 0)) goto 173; 
174:   if (true) goto 167;
173:   store B0 = 0;
175:   if (true) goto 168;
167:   store B0 = *;
168:   nop;


 /* update predicate - B1: (x > 0) */
180:  if (false) goto 179; 
181:   if (true) goto 176;
179:   store B1 = 1;
182:   if (true) goto 178;
176:  if ((t1 == 0)) goto 183; 
184:   if (true) goto 177;
183:   store B1 = 0;
185:   if (true) goto 178;
177:   store B1 = *;
178:   nop;

186: end_atomic;
3:   if(*) goto 2; 

assert final ( B0 == 1); 

