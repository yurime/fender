shared B0, B1, B2, B3, B4, B5, B6, B7, B8, B9, B10, B11, B12, B13, B14, B15, B16;
local t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16;

init
101: store B0 = *;
102: store B1 = *;
103: store B2 = *;
104: store B3 = *;
105: store B4 = *;
106: store B5 = *;
107: store B6 = *;
108: store B7 = *;
109: store B8 = *;
110: store B9 = *;
111: store B10 = *;
112: store B11 = *;
113: store B12 = *;
114: store B13 = *;
115: store B14 = *;
116: store B15 = *;
117: store B16 = *;

118: load t0 = B0;
119: load t1 = B1;
120: load t2 = B2;
121: load t3 = B3;
122: load t4 = B4;
123: load t5 = B5;
124: load t6 = B6;
125: load t7 = B7;
126: load t8 = B8;
127: load t9 = B9;
128: load t10 = B10;
129: load t11 = B11;
130: load t12 = B12;
131: load t13 = B13;
132: load t14 = B14;
133: load t15 = B15;
134: load t16 = B16;


135: nop; 

/* Statement turn = 0 */

 /* update predicate - B14: (turn = 0) */
136:   store B14 = choose(true, false);



137: nop; 

/* Statement flag0 = 0 */

 /* update predicate - B11: (flag0 = 0) */
138:   store B11 = choose(true, false);



139: nop; 

/* Statement flag1 = 0 */

 /* update predicate - B13: (flag1 = 0) */
140:   store B13 = choose(true, false);



141: nop; 

/* Statement overflow = 0 */

 /* update predicate - B0: (overflow = 0) */
142:   store B0 = choose(true, false);



/* Reset local variables */ 
143: t0 = 0; 
144: t1 = 0; 
145: t2 = 0; 
146: t3 = 0; 
147: t4 = 0; 
148: t5 = 0; 
149: t6 = 0; 
150: t7 = 0; 
151: t8 = 0; 
152: t9 = 0; 
153: t10 = 0; 
154: t11 = 0; 
155: t12 = 0; 
156: t13 = 0; 
157: t14 = 0; 
158: t15 = 0; 
159: t16 = 0; 
160: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 


process 1
/* initialize counters */


161: begin_atomic;

162: nop; 

/* Statement turn_cnt_p1 = 0 */

 /* update predicate - B1: (turn_cnt_p1 = 0) */
163:   store B1 = choose(true, false);


 /* update predicate - B2: (turn_cnt_p1 = 1) */
164:   store B2 = choose(false, true);


165: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

166: nop; 

/* Statement flag0_cnt_p1 = 0 */

 /* update predicate - B3: (flag0_cnt_p1 = 0) */
167:   store B3 = choose(true, false);


 /* update predicate - B4: (flag0_cnt_p1 = 1) */
168:   store B4 = choose(false, true);


169: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

170: end_atomic;

 /* flush_start */


171: begin_atomic;

51: nop; 

172: nop; 

/* Statement if (turn_cnt_p1 != 0) */ 

176: if (*) goto 174;
173: assume(!((B1 != 0))); 

177: nop; 

/* Statement if (*) */ 

180: if (*) goto 178;

181: nop; 

/* Statement turn = turn_1_p1 */
182:  load t15 = B15;

 /* update predicate - B14: (turn = 0) */
183:   store B14 = choose((t15 != 0), (t15 == 0));


184: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

185: nop; 

/* Statement turn_cnt_p1 = turn_cnt_p1 - 1 */
186:  load t1 = B1;
187:  load t2 = B2;

 /* update predicate - B1: (turn_cnt_p1 = 0) */
188:   store B1 = choose((t2 != 0), (t1 != 0) || (t2 == 0));


 /* update predicate - B2: (turn_cnt_p1 = 1) */
189:   store B2 = choose(false, (t1 != 0) || (t2 != 0));


190: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

191: if (true) goto 179;
178: nop;

179: nop;

192: if (true) goto 175;
174: nop;
193: assume(!((B1 == 0) || (B2 != 0))); 

175: nop;

194: nop; 

/* Statement if (flag0_cnt_p1 != 0) */ 

198: if (*) goto 196;
195: assume(!((B3 != 0))); 

199: nop; 

/* Statement if (*) */ 

202: if (*) goto 200;

203: nop; 

/* Statement flag0 = flag0_1_p1 */
204:  load t12 = B12;

 /* update predicate - B11: (flag0 = 0) */
205:   store B11 = choose((t12 != 0), (t12 == 0));


206: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

207: nop; 

/* Statement flag0_cnt_p1 = flag0_cnt_p1 - 1 */
208:  load t3 = B3;
209:  load t4 = B4;

 /* update predicate - B3: (flag0_cnt_p1 = 0) */
210:   store B3 = choose((t4 != 0), (t3 != 0) || (t4 == 0));


 /* update predicate - B4: (flag0_cnt_p1 = 1) */
211:   store B4 = choose(false, (t3 != 0) || (t4 != 0));


212: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

213: if (true) goto 201;
200: nop;

201: nop;

214: if (true) goto 197;
196: nop;
215: assume(!((B3 == 0) || (B4 != 0))); 

197: nop;

216: nop; 

/* Statement if (*) */ 

219: if (*) goto 217;

/* Statement goto goto 51 */ 
220:   if (true) goto 51; 

221: if (true) goto 218;
217: nop;

218: nop;

222: end_atomic;

 /* flush_end */


1: begin_atomic;

/* Statement: store flag0 = 1; */


223: nop; 

/* Statement if (flag0_cnt_p1 = 1) */ 

227: if (*) goto 225;
224: assume(!((B3 != 0) || (B4 == 0))); 

228: nop; 

/* Statement overflow = 1 */

 /* update predicate - B0: (overflow = 0) */
229:   store B0 = choose(false, true);


230: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

231: if (true) goto 226;
225: nop;
232: assume(!((B4 != 0))); 

226: nop;

233: nop; 

/* Statement flag0_cnt_p1 = flag0_cnt_p1 + 1 */
234:  load t3 = B3;
235:  load t4 = B4;

 /* update predicate - B3: (flag0_cnt_p1 = 0) */
236:   store B3 = choose(false, (t3 != 0) || (t4 != 0));


 /* update predicate - B4: (flag0_cnt_p1 = 1) */
237:   store B4 = choose((t3 != 0), (t3 == 0) || (t4 != 0));


238: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

239: nop; 

/* Statement if (flag0_cnt_p1 = 1) */ 

243: if (*) goto 241;
240: assume(!((B3 != 0) || (B4 == 0))); 

244: nop; 

/* Statement flag0_1_p1 = 1 */

 /* update predicate - B12: (flag0_1_p1 = 0) */
245:   store B12 = choose(false, true);


246: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

247: if (true) goto 242;
241: nop;
248: assume(!((B4 != 0))); 

242: nop;

249: end_atomic;

 /* flush_start */


250: begin_atomic;

52: nop; 

251: nop; 

/* Statement if (turn_cnt_p1 != 0) */ 

255: if (*) goto 253;
252: assume(!((B1 != 0))); 

256: nop; 

/* Statement if (*) */ 

259: if (*) goto 257;

260: nop; 

/* Statement turn = turn_1_p1 */
261:  load t15 = B15;

 /* update predicate - B14: (turn = 0) */
262:   store B14 = choose((t15 != 0), (t15 == 0));


263: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

264: nop; 

/* Statement turn_cnt_p1 = turn_cnt_p1 - 1 */
265:  load t1 = B1;
266:  load t2 = B2;

 /* update predicate - B1: (turn_cnt_p1 = 0) */
267:   store B1 = choose((t2 != 0), (t1 != 0) || (t2 == 0));


 /* update predicate - B2: (turn_cnt_p1 = 1) */
268:   store B2 = choose(false, (t1 != 0) || (t2 != 0));


269: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

270: if (true) goto 258;
257: nop;

258: nop;

271: if (true) goto 254;
253: nop;
272: assume(!((B1 == 0) || (B2 != 0))); 

254: nop;

273: nop; 

/* Statement if (flag0_cnt_p1 != 0) */ 

277: if (*) goto 275;
274: assume(!((B3 != 0))); 

278: nop; 

/* Statement if (*) */ 

281: if (*) goto 279;

282: nop; 

/* Statement flag0 = flag0_1_p1 */
283:  load t12 = B12;

 /* update predicate - B11: (flag0 = 0) */
284:   store B11 = choose((t12 != 0), (t12 == 0));


285: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

286: nop; 

/* Statement flag0_cnt_p1 = flag0_cnt_p1 - 1 */
287:  load t3 = B3;
288:  load t4 = B4;

 /* update predicate - B3: (flag0_cnt_p1 = 0) */
289:   store B3 = choose((t4 != 0), (t3 != 0) || (t4 == 0));


 /* update predicate - B4: (flag0_cnt_p1 = 1) */
290:   store B4 = choose(false, (t3 != 0) || (t4 != 0));


291: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

292: if (true) goto 280;
279: nop;

280: nop;

293: if (true) goto 276;
275: nop;
294: assume(!((B3 == 0) || (B4 != 0))); 

276: nop;

295: nop; 

/* Statement if (*) */ 

298: if (*) goto 296;

/* Statement goto goto 52 */ 
299:   if (true) goto 52; 

300: if (true) goto 297;
296: nop;

297: nop;

301: end_atomic;

 /* flush_end */


302: begin_atomic;

/* Statement: fence_start; */


303: nop; 

/* Statement if (turn_cnt_p1 = 1) */ 

307: if (*) goto 305;
304: assume(!((B1 != 0) || (B2 == 0))); 

308: nop; 

/* Statement turn = turn_1_p1 */
309:  load t15 = B15;

 /* update predicate - B14: (turn = 0) */
310:   store B14 = choose((t15 != 0), (t15 == 0));


311: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

312: if (true) goto 306;
305: nop;
313: assume(!((B2 != 0))); 

306: nop;

314: nop; 

/* Statement turn_cnt_p1 = 0 */

 /* update predicate - B1: (turn_cnt_p1 = 0) */
315:   store B1 = choose(true, false);


 /* update predicate - B2: (turn_cnt_p1 = 1) */
316:   store B2 = choose(false, true);


317: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

318: nop; 

/* Statement if (flag0_cnt_p1 = 1) */ 

322: if (*) goto 320;
319: assume(!((B3 != 0) || (B4 == 0))); 

323: nop; 

/* Statement flag0 = flag0_1_p1 */
324:  load t12 = B12;

 /* update predicate - B11: (flag0 = 0) */
325:   store B11 = choose((t12 != 0), (t12 == 0));


326: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

327: if (true) goto 321;
320: nop;
328: assume(!((B4 != 0))); 

321: nop;

329: nop; 

/* Statement flag0_cnt_p1 = 0 */

 /* update predicate - B3: (flag0_cnt_p1 = 0) */
330:   store B3 = choose(true, false);


 /* update predicate - B4: (flag0_cnt_p1 = 1) */
331:   store B4 = choose(false, true);


332: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

/* fence_end */


333: end_atomic;

2: nop; 

334: nop; 

/* Statement f1 = flag1 */
335: begin_atomic;
336:  load t13 = B13;

 /* update predicate - B9: (f1 = 0) */
337:   store B9 = choose((t13 != 0), (t13 == 0));


338: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

339: end_atomic;
 /* flush_start */


340: begin_atomic;

53: nop; 

341: nop; 

/* Statement if (turn_cnt_p1 != 0) */ 

345: if (*) goto 343;
342: assume(!((B1 != 0))); 

346: nop; 

/* Statement if (*) */ 

349: if (*) goto 347;

350: nop; 

/* Statement turn = turn_1_p1 */
351:  load t15 = B15;

 /* update predicate - B14: (turn = 0) */
352:   store B14 = choose((t15 != 0), (t15 == 0));


353: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

354: nop; 

/* Statement turn_cnt_p1 = turn_cnt_p1 - 1 */
355:  load t1 = B1;
356:  load t2 = B2;

 /* update predicate - B1: (turn_cnt_p1 = 0) */
357:   store B1 = choose((t2 != 0), (t1 != 0) || (t2 == 0));


 /* update predicate - B2: (turn_cnt_p1 = 1) */
358:   store B2 = choose(false, (t1 != 0) || (t2 != 0));


359: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

360: if (true) goto 348;
347: nop;

348: nop;

361: if (true) goto 344;
343: nop;
362: assume(!((B1 == 0) || (B2 != 0))); 

344: nop;

363: nop; 

/* Statement if (flag0_cnt_p1 != 0) */ 

367: if (*) goto 365;
364: assume(!((B3 != 0))); 

368: nop; 

/* Statement if (*) */ 

371: if (*) goto 369;

372: nop; 

/* Statement flag0 = flag0_1_p1 */
373:  load t12 = B12;

 /* update predicate - B11: (flag0 = 0) */
374:   store B11 = choose((t12 != 0), (t12 == 0));


375: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

376: nop; 

/* Statement flag0_cnt_p1 = flag0_cnt_p1 - 1 */
377:  load t3 = B3;
378:  load t4 = B4;

 /* update predicate - B3: (flag0_cnt_p1 = 0) */
379:   store B3 = choose((t4 != 0), (t3 != 0) || (t4 == 0));


 /* update predicate - B4: (flag0_cnt_p1 = 1) */
380:   store B4 = choose(false, (t3 != 0) || (t4 != 0));


381: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

382: if (true) goto 370;
369: nop;

370: nop;

383: if (true) goto 366;
365: nop;
384: assume(!((B3 == 0) || (B4 != 0))); 

366: nop;

385: nop; 

/* Statement if (*) */ 

388: if (*) goto 386;

/* Statement goto goto 53 */ 
389:   if (true) goto 53; 

390: if (true) goto 387;
386: nop;

387: nop;

391: end_atomic;

 /* flush_end */


3: nop; 

/* Statement if ((f1 = 0)) */ 

395: if (*) goto 393;
392: assume(!((B9 == 0))); 

 /* flush_start */


396: begin_atomic;

54: nop; 

397: nop; 

/* Statement if (turn_cnt_p1 != 0) */ 

401: if (*) goto 399;
398: assume(!((B1 != 0))); 

402: nop; 

/* Statement if (*) */ 

405: if (*) goto 403;

406: nop; 

/* Statement turn = turn_1_p1 */
407:  load t15 = B15;

 /* update predicate - B14: (turn = 0) */
408:   store B14 = choose((t15 != 0), (t15 == 0));


409: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

410: nop; 

/* Statement turn_cnt_p1 = turn_cnt_p1 - 1 */
411:  load t1 = B1;
412:  load t2 = B2;

 /* update predicate - B1: (turn_cnt_p1 = 0) */
413:   store B1 = choose((t2 != 0), (t1 != 0) || (t2 == 0));


 /* update predicate - B2: (turn_cnt_p1 = 1) */
414:   store B2 = choose(false, (t1 != 0) || (t2 != 0));


415: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

416: if (true) goto 404;
403: nop;

404: nop;

417: if (true) goto 400;
399: nop;
418: assume(!((B1 == 0) || (B2 != 0))); 

400: nop;

419: nop; 

/* Statement if (flag0_cnt_p1 != 0) */ 

423: if (*) goto 421;
420: assume(!((B3 != 0))); 

424: nop; 

/* Statement if (*) */ 

427: if (*) goto 425;

428: nop; 

/* Statement flag0 = flag0_1_p1 */
429:  load t12 = B12;

 /* update predicate - B11: (flag0 = 0) */
430:   store B11 = choose((t12 != 0), (t12 == 0));


431: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

432: nop; 

/* Statement flag0_cnt_p1 = flag0_cnt_p1 - 1 */
433:  load t3 = B3;
434:  load t4 = B4;

 /* update predicate - B3: (flag0_cnt_p1 = 0) */
435:   store B3 = choose((t4 != 0), (t3 != 0) || (t4 == 0));


 /* update predicate - B4: (flag0_cnt_p1 = 1) */
436:   store B4 = choose(false, (t3 != 0) || (t4 != 0));


437: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

438: if (true) goto 426;
425: nop;

426: nop;

439: if (true) goto 422;
421: nop;
440: assume(!((B3 == 0) || (B4 != 0))); 

422: nop;

441: nop; 

/* Statement if (*) */ 

444: if (*) goto 442;

/* Statement goto goto 54 */ 
445:   if (true) goto 54; 

446: if (true) goto 443;
442: nop;

443: nop;

447: end_atomic;

 /* flush_end */


/* Statement goto goto 11 */ 
448:   if (true) goto 11; 

 /* flush_start */


449: begin_atomic;

55: nop; 

450: nop; 

/* Statement if (turn_cnt_p1 != 0) */ 

454: if (*) goto 452;
451: assume(!((B1 != 0))); 

455: nop; 

/* Statement if (*) */ 

458: if (*) goto 456;

459: nop; 

/* Statement turn = turn_1_p1 */
460:  load t15 = B15;

 /* update predicate - B14: (turn = 0) */
461:   store B14 = choose((t15 != 0), (t15 == 0));


462: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

463: nop; 

/* Statement turn_cnt_p1 = turn_cnt_p1 - 1 */
464:  load t1 = B1;
465:  load t2 = B2;

 /* update predicate - B1: (turn_cnt_p1 = 0) */
466:   store B1 = choose((t2 != 0), (t1 != 0) || (t2 == 0));


 /* update predicate - B2: (turn_cnt_p1 = 1) */
467:   store B2 = choose(false, (t1 != 0) || (t2 != 0));


468: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

469: if (true) goto 457;
456: nop;

457: nop;

470: if (true) goto 453;
452: nop;
471: assume(!((B1 == 0) || (B2 != 0))); 

453: nop;

472: nop; 

/* Statement if (flag0_cnt_p1 != 0) */ 

476: if (*) goto 474;
473: assume(!((B3 != 0))); 

477: nop; 

/* Statement if (*) */ 

480: if (*) goto 478;

481: nop; 

/* Statement flag0 = flag0_1_p1 */
482:  load t12 = B12;

 /* update predicate - B11: (flag0 = 0) */
483:   store B11 = choose((t12 != 0), (t12 == 0));


484: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

485: nop; 

/* Statement flag0_cnt_p1 = flag0_cnt_p1 - 1 */
486:  load t3 = B3;
487:  load t4 = B4;

 /* update predicate - B3: (flag0_cnt_p1 = 0) */
488:   store B3 = choose((t4 != 0), (t3 != 0) || (t4 == 0));


 /* update predicate - B4: (flag0_cnt_p1 = 1) */
489:   store B4 = choose(false, (t3 != 0) || (t4 != 0));


490: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

491: if (true) goto 479;
478: nop;

479: nop;

492: if (true) goto 475;
474: nop;
493: assume(!((B3 == 0) || (B4 != 0))); 

475: nop;

494: nop; 

/* Statement if (*) */ 

497: if (*) goto 495;

/* Statement goto goto 55 */ 
498:   if (true) goto 55; 

499: if (true) goto 496;
495: nop;

496: nop;

500: end_atomic;

 /* flush_end */


501: if (true) goto 394;
393: nop;
502: assume(!((B9 != 0))); 

 /* flush_start */


503: begin_atomic;

56: nop; 

504: nop; 

/* Statement if (turn_cnt_p1 != 0) */ 

508: if (*) goto 506;
505: assume(!((B1 != 0))); 

509: nop; 

/* Statement if (*) */ 

512: if (*) goto 510;

513: nop; 

/* Statement turn = turn_1_p1 */
514:  load t15 = B15;

 /* update predicate - B14: (turn = 0) */
515:   store B14 = choose((t15 != 0), (t15 == 0));


516: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

517: nop; 

/* Statement turn_cnt_p1 = turn_cnt_p1 - 1 */
518:  load t1 = B1;
519:  load t2 = B2;

 /* update predicate - B1: (turn_cnt_p1 = 0) */
520:   store B1 = choose((t2 != 0), (t1 != 0) || (t2 == 0));


 /* update predicate - B2: (turn_cnt_p1 = 1) */
521:   store B2 = choose(false, (t1 != 0) || (t2 != 0));


522: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

523: if (true) goto 511;
510: nop;

511: nop;

524: if (true) goto 507;
506: nop;
525: assume(!((B1 == 0) || (B2 != 0))); 

507: nop;

526: nop; 

/* Statement if (flag0_cnt_p1 != 0) */ 

530: if (*) goto 528;
527: assume(!((B3 != 0))); 

531: nop; 

/* Statement if (*) */ 

534: if (*) goto 532;

535: nop; 

/* Statement flag0 = flag0_1_p1 */
536:  load t12 = B12;

 /* update predicate - B11: (flag0 = 0) */
537:   store B11 = choose((t12 != 0), (t12 == 0));


538: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

539: nop; 

/* Statement flag0_cnt_p1 = flag0_cnt_p1 - 1 */
540:  load t3 = B3;
541:  load t4 = B4;

 /* update predicate - B3: (flag0_cnt_p1 = 0) */
542:   store B3 = choose((t4 != 0), (t3 != 0) || (t4 == 0));


 /* update predicate - B4: (flag0_cnt_p1 = 1) */
543:   store B4 = choose(false, (t3 != 0) || (t4 != 0));


544: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

545: if (true) goto 533;
532: nop;

533: nop;

546: if (true) goto 529;
528: nop;
547: assume(!((B3 == 0) || (B4 != 0))); 

529: nop;

548: nop; 

/* Statement if (*) */ 

551: if (*) goto 549;

/* Statement goto goto 56 */ 
552:   if (true) goto 56; 

553: if (true) goto 550;
549: nop;

550: nop;

554: end_atomic;

 /* flush_end */


394: nop;

 /* flush_start */


555: begin_atomic;

57: nop; 

556: nop; 

/* Statement if (turn_cnt_p1 != 0) */ 

560: if (*) goto 558;
557: assume(!((B1 != 0))); 

561: nop; 

/* Statement if (*) */ 

564: if (*) goto 562;

565: nop; 

/* Statement turn = turn_1_p1 */
566:  load t15 = B15;

 /* update predicate - B14: (turn = 0) */
567:   store B14 = choose((t15 != 0), (t15 == 0));


568: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

569: nop; 

/* Statement turn_cnt_p1 = turn_cnt_p1 - 1 */
570:  load t1 = B1;
571:  load t2 = B2;

 /* update predicate - B1: (turn_cnt_p1 = 0) */
572:   store B1 = choose((t2 != 0), (t1 != 0) || (t2 == 0));


 /* update predicate - B2: (turn_cnt_p1 = 1) */
573:   store B2 = choose(false, (t1 != 0) || (t2 != 0));


574: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

575: if (true) goto 563;
562: nop;

563: nop;

576: if (true) goto 559;
558: nop;
577: assume(!((B1 == 0) || (B2 != 0))); 

559: nop;

578: nop; 

/* Statement if (flag0_cnt_p1 != 0) */ 

582: if (*) goto 580;
579: assume(!((B3 != 0))); 

583: nop; 

/* Statement if (*) */ 

586: if (*) goto 584;

587: nop; 

/* Statement flag0 = flag0_1_p1 */
588:  load t12 = B12;

 /* update predicate - B11: (flag0 = 0) */
589:   store B11 = choose((t12 != 0), (t12 == 0));


590: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

591: nop; 

/* Statement flag0_cnt_p1 = flag0_cnt_p1 - 1 */
592:  load t3 = B3;
593:  load t4 = B4;

 /* update predicate - B3: (flag0_cnt_p1 = 0) */
594:   store B3 = choose((t4 != 0), (t3 != 0) || (t4 == 0));


 /* update predicate - B4: (flag0_cnt_p1 = 1) */
595:   store B4 = choose(false, (t3 != 0) || (t4 != 0));


596: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

597: if (true) goto 585;
584: nop;

585: nop;

598: if (true) goto 581;
580: nop;
599: assume(!((B3 == 0) || (B4 != 0))); 

581: nop;

600: nop; 

/* Statement if (*) */ 

603: if (*) goto 601;

/* Statement goto goto 57 */ 
604:   if (true) goto 57; 

605: if (true) goto 602;
601: nop;

602: nop;

606: end_atomic;

 /* flush_end */


607: nop; 

/* Statement: load t1 = turn; */


608: begin_atomic;

609: nop; 

/* Statement if (turn_cnt_p1 = 0) */ 

613: if (*) goto 611;
610: assume(!((B1 == 0) || (B2 != 0))); 

614: nop; 

/* Statement t1 = turn */
615:  load t14 = B14;

 /* update predicate - B8: (t1 = 0) */
616:   store B8 = choose((t14 != 0), (t14 == 0));


617: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

618: if (true) goto 612;
611: nop;
619: assume(!((B1 != 0))); 

612: nop;

620: nop; 

/* Statement if (turn_cnt_p1 = 1) */ 

624: if (*) goto 622;
621: assume(!((B1 != 0) || (B2 == 0))); 

625: nop; 

/* Statement t1 = turn_1_p1 */
626:  load t15 = B15;

 /* update predicate - B8: (t1 = 0) */
627:   store B8 = choose((t15 != 0), (t15 == 0));


628: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

629: if (true) goto 623;
622: nop;
630: assume(!((B2 != 0))); 

623: nop;

631: end_atomic;

 /* flush_start */


632: begin_atomic;

58: nop; 

633: nop; 

/* Statement if (turn_cnt_p1 != 0) */ 

637: if (*) goto 635;
634: assume(!((B1 != 0))); 

638: nop; 

/* Statement if (*) */ 

641: if (*) goto 639;

642: nop; 

/* Statement turn = turn_1_p1 */
643:  load t15 = B15;

 /* update predicate - B14: (turn = 0) */
644:   store B14 = choose((t15 != 0), (t15 == 0));


645: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

646: nop; 

/* Statement turn_cnt_p1 = turn_cnt_p1 - 1 */
647:  load t1 = B1;
648:  load t2 = B2;

 /* update predicate - B1: (turn_cnt_p1 = 0) */
649:   store B1 = choose((t2 != 0), (t1 != 0) || (t2 == 0));


 /* update predicate - B2: (turn_cnt_p1 = 1) */
650:   store B2 = choose(false, (t1 != 0) || (t2 != 0));


651: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

652: if (true) goto 640;
639: nop;

640: nop;

653: if (true) goto 636;
635: nop;
654: assume(!((B1 == 0) || (B2 != 0))); 

636: nop;

655: nop; 

/* Statement if (flag0_cnt_p1 != 0) */ 

659: if (*) goto 657;
656: assume(!((B3 != 0))); 

660: nop; 

/* Statement if (*) */ 

663: if (*) goto 661;

664: nop; 

/* Statement flag0 = flag0_1_p1 */
665:  load t12 = B12;

 /* update predicate - B11: (flag0 = 0) */
666:   store B11 = choose((t12 != 0), (t12 == 0));


667: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

668: nop; 

/* Statement flag0_cnt_p1 = flag0_cnt_p1 - 1 */
669:  load t3 = B3;
670:  load t4 = B4;

 /* update predicate - B3: (flag0_cnt_p1 = 0) */
671:   store B3 = choose((t4 != 0), (t3 != 0) || (t4 == 0));


 /* update predicate - B4: (flag0_cnt_p1 = 1) */
672:   store B4 = choose(false, (t3 != 0) || (t4 != 0));


673: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

674: if (true) goto 662;
661: nop;

662: nop;

675: if (true) goto 658;
657: nop;
676: assume(!((B3 == 0) || (B4 != 0))); 

658: nop;

677: nop; 

/* Statement if (*) */ 

680: if (*) goto 678;

/* Statement goto goto 58 */ 
681:   if (true) goto 58; 

682: if (true) goto 679;
678: nop;

679: nop;

683: end_atomic;

 /* flush_end */


5: nop; 

/* Statement if ((t1 = 0)) */ 

687: if (*) goto 685;
684: assume(!((B8 == 0))); 

 /* flush_start */


688: begin_atomic;

59: nop; 

689: nop; 

/* Statement if (turn_cnt_p1 != 0) */ 

693: if (*) goto 691;
690: assume(!((B1 != 0))); 

694: nop; 

/* Statement if (*) */ 

697: if (*) goto 695;

698: nop; 

/* Statement turn = turn_1_p1 */
699:  load t15 = B15;

 /* update predicate - B14: (turn = 0) */
700:   store B14 = choose((t15 != 0), (t15 == 0));


701: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

702: nop; 

/* Statement turn_cnt_p1 = turn_cnt_p1 - 1 */
703:  load t1 = B1;
704:  load t2 = B2;

 /* update predicate - B1: (turn_cnt_p1 = 0) */
705:   store B1 = choose((t2 != 0), (t1 != 0) || (t2 == 0));


 /* update predicate - B2: (turn_cnt_p1 = 1) */
706:   store B2 = choose(false, (t1 != 0) || (t2 != 0));


707: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

708: if (true) goto 696;
695: nop;

696: nop;

709: if (true) goto 692;
691: nop;
710: assume(!((B1 == 0) || (B2 != 0))); 

692: nop;

711: nop; 

/* Statement if (flag0_cnt_p1 != 0) */ 

715: if (*) goto 713;
712: assume(!((B3 != 0))); 

716: nop; 

/* Statement if (*) */ 

719: if (*) goto 717;

720: nop; 

/* Statement flag0 = flag0_1_p1 */
721:  load t12 = B12;

 /* update predicate - B11: (flag0 = 0) */
722:   store B11 = choose((t12 != 0), (t12 == 0));


723: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

724: nop; 

/* Statement flag0_cnt_p1 = flag0_cnt_p1 - 1 */
725:  load t3 = B3;
726:  load t4 = B4;

 /* update predicate - B3: (flag0_cnt_p1 = 0) */
727:   store B3 = choose((t4 != 0), (t3 != 0) || (t4 == 0));


 /* update predicate - B4: (flag0_cnt_p1 = 1) */
728:   store B4 = choose(false, (t3 != 0) || (t4 != 0));


729: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

730: if (true) goto 718;
717: nop;

718: nop;

731: if (true) goto 714;
713: nop;
732: assume(!((B3 == 0) || (B4 != 0))); 

714: nop;

733: nop; 

/* Statement if (*) */ 

736: if (*) goto 734;

/* Statement goto goto 59 */ 
737:   if (true) goto 59; 

738: if (true) goto 735;
734: nop;

735: nop;

739: end_atomic;

 /* flush_end */


/* Statement goto goto 2 */ 
740:   if (true) goto 2; 

 /* flush_start */


741: begin_atomic;

60: nop; 

742: nop; 

/* Statement if (turn_cnt_p1 != 0) */ 

746: if (*) goto 744;
743: assume(!((B1 != 0))); 

747: nop; 

/* Statement if (*) */ 

750: if (*) goto 748;

751: nop; 

/* Statement turn = turn_1_p1 */
752:  load t15 = B15;

 /* update predicate - B14: (turn = 0) */
753:   store B14 = choose((t15 != 0), (t15 == 0));


754: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

755: nop; 

/* Statement turn_cnt_p1 = turn_cnt_p1 - 1 */
756:  load t1 = B1;
757:  load t2 = B2;

 /* update predicate - B1: (turn_cnt_p1 = 0) */
758:   store B1 = choose((t2 != 0), (t1 != 0) || (t2 == 0));


 /* update predicate - B2: (turn_cnt_p1 = 1) */
759:   store B2 = choose(false, (t1 != 0) || (t2 != 0));


760: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

761: if (true) goto 749;
748: nop;

749: nop;

762: if (true) goto 745;
744: nop;
763: assume(!((B1 == 0) || (B2 != 0))); 

745: nop;

764: nop; 

/* Statement if (flag0_cnt_p1 != 0) */ 

768: if (*) goto 766;
765: assume(!((B3 != 0))); 

769: nop; 

/* Statement if (*) */ 

772: if (*) goto 770;

773: nop; 

/* Statement flag0 = flag0_1_p1 */
774:  load t12 = B12;

 /* update predicate - B11: (flag0 = 0) */
775:   store B11 = choose((t12 != 0), (t12 == 0));


776: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

777: nop; 

/* Statement flag0_cnt_p1 = flag0_cnt_p1 - 1 */
778:  load t3 = B3;
779:  load t4 = B4;

 /* update predicate - B3: (flag0_cnt_p1 = 0) */
780:   store B3 = choose((t4 != 0), (t3 != 0) || (t4 == 0));


 /* update predicate - B4: (flag0_cnt_p1 = 1) */
781:   store B4 = choose(false, (t3 != 0) || (t4 != 0));


782: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

783: if (true) goto 771;
770: nop;

771: nop;

784: if (true) goto 767;
766: nop;
785: assume(!((B3 == 0) || (B4 != 0))); 

767: nop;

786: nop; 

/* Statement if (*) */ 

789: if (*) goto 787;

/* Statement goto goto 60 */ 
790:   if (true) goto 60; 

791: if (true) goto 788;
787: nop;

788: nop;

792: end_atomic;

 /* flush_end */


793: if (true) goto 686;
685: nop;
794: assume(!((B8 != 0))); 

 /* flush_start */


795: begin_atomic;

61: nop; 

796: nop; 

/* Statement if (turn_cnt_p1 != 0) */ 

800: if (*) goto 798;
797: assume(!((B1 != 0))); 

801: nop; 

/* Statement if (*) */ 

804: if (*) goto 802;

805: nop; 

/* Statement turn = turn_1_p1 */
806:  load t15 = B15;

 /* update predicate - B14: (turn = 0) */
807:   store B14 = choose((t15 != 0), (t15 == 0));


808: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

809: nop; 

/* Statement turn_cnt_p1 = turn_cnt_p1 - 1 */
810:  load t1 = B1;
811:  load t2 = B2;

 /* update predicate - B1: (turn_cnt_p1 = 0) */
812:   store B1 = choose((t2 != 0), (t1 != 0) || (t2 == 0));


 /* update predicate - B2: (turn_cnt_p1 = 1) */
813:   store B2 = choose(false, (t1 != 0) || (t2 != 0));


814: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

815: if (true) goto 803;
802: nop;

803: nop;

816: if (true) goto 799;
798: nop;
817: assume(!((B1 == 0) || (B2 != 0))); 

799: nop;

818: nop; 

/* Statement if (flag0_cnt_p1 != 0) */ 

822: if (*) goto 820;
819: assume(!((B3 != 0))); 

823: nop; 

/* Statement if (*) */ 

826: if (*) goto 824;

827: nop; 

/* Statement flag0 = flag0_1_p1 */
828:  load t12 = B12;

 /* update predicate - B11: (flag0 = 0) */
829:   store B11 = choose((t12 != 0), (t12 == 0));


830: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

831: nop; 

/* Statement flag0_cnt_p1 = flag0_cnt_p1 - 1 */
832:  load t3 = B3;
833:  load t4 = B4;

 /* update predicate - B3: (flag0_cnt_p1 = 0) */
834:   store B3 = choose((t4 != 0), (t3 != 0) || (t4 == 0));


 /* update predicate - B4: (flag0_cnt_p1 = 1) */
835:   store B4 = choose(false, (t3 != 0) || (t4 != 0));


836: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

837: if (true) goto 825;
824: nop;

825: nop;

838: if (true) goto 821;
820: nop;
839: assume(!((B3 == 0) || (B4 != 0))); 

821: nop;

840: nop; 

/* Statement if (*) */ 

843: if (*) goto 841;

/* Statement goto goto 61 */ 
844:   if (true) goto 61; 

845: if (true) goto 842;
841: nop;

842: nop;

846: end_atomic;

 /* flush_end */


686: nop;

 /* flush_start */


847: begin_atomic;

62: nop; 

848: nop; 

/* Statement if (turn_cnt_p1 != 0) */ 

852: if (*) goto 850;
849: assume(!((B1 != 0))); 

853: nop; 

/* Statement if (*) */ 

856: if (*) goto 854;

857: nop; 

/* Statement turn = turn_1_p1 */
858:  load t15 = B15;

 /* update predicate - B14: (turn = 0) */
859:   store B14 = choose((t15 != 0), (t15 == 0));


860: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

861: nop; 

/* Statement turn_cnt_p1 = turn_cnt_p1 - 1 */
862:  load t1 = B1;
863:  load t2 = B2;

 /* update predicate - B1: (turn_cnt_p1 = 0) */
864:   store B1 = choose((t2 != 0), (t1 != 0) || (t2 == 0));


 /* update predicate - B2: (turn_cnt_p1 = 1) */
865:   store B2 = choose(false, (t1 != 0) || (t2 != 0));


866: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

867: if (true) goto 855;
854: nop;

855: nop;

868: if (true) goto 851;
850: nop;
869: assume(!((B1 == 0) || (B2 != 0))); 

851: nop;

870: nop; 

/* Statement if (flag0_cnt_p1 != 0) */ 

874: if (*) goto 872;
871: assume(!((B3 != 0))); 

875: nop; 

/* Statement if (*) */ 

878: if (*) goto 876;

879: nop; 

/* Statement flag0 = flag0_1_p1 */
880:  load t12 = B12;

 /* update predicate - B11: (flag0 = 0) */
881:   store B11 = choose((t12 != 0), (t12 == 0));


882: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

883: nop; 

/* Statement flag0_cnt_p1 = flag0_cnt_p1 - 1 */
884:  load t3 = B3;
885:  load t4 = B4;

 /* update predicate - B3: (flag0_cnt_p1 = 0) */
886:   store B3 = choose((t4 != 0), (t3 != 0) || (t4 == 0));


 /* update predicate - B4: (flag0_cnt_p1 = 1) */
887:   store B4 = choose(false, (t3 != 0) || (t4 != 0));


888: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

889: if (true) goto 877;
876: nop;

877: nop;

890: if (true) goto 873;
872: nop;
891: assume(!((B3 == 0) || (B4 != 0))); 

873: nop;

892: nop; 

/* Statement if (*) */ 

895: if (*) goto 893;

/* Statement goto goto 62 */ 
896:   if (true) goto 62; 

897: if (true) goto 894;
893: nop;

894: nop;

898: end_atomic;

 /* flush_end */


6: begin_atomic;

/* Statement: store flag0 = 0; */


899: nop; 

/* Statement if (flag0_cnt_p1 = 1) */ 

903: if (*) goto 901;
900: assume(!((B3 != 0) || (B4 == 0))); 

904: nop; 

/* Statement overflow = 1 */

 /* update predicate - B0: (overflow = 0) */
905:   store B0 = choose(false, true);


906: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

907: if (true) goto 902;
901: nop;
908: assume(!((B4 != 0))); 

902: nop;

909: nop; 

/* Statement flag0_cnt_p1 = flag0_cnt_p1 + 1 */
910:  load t3 = B3;
911:  load t4 = B4;

 /* update predicate - B3: (flag0_cnt_p1 = 0) */
912:   store B3 = choose(false, (t3 != 0) || (t4 != 0));


 /* update predicate - B4: (flag0_cnt_p1 = 1) */
913:   store B4 = choose((t3 != 0), (t3 == 0) || (t4 != 0));


914: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

915: nop; 

/* Statement if (flag0_cnt_p1 = 1) */ 

919: if (*) goto 917;
916: assume(!((B3 != 0) || (B4 == 0))); 

920: nop; 

/* Statement flag0_1_p1 = 0 */

 /* update predicate - B12: (flag0_1_p1 = 0) */
921:   store B12 = choose(true, false);


922: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

923: if (true) goto 918;
917: nop;
924: assume(!((B4 != 0))); 

918: nop;

925: end_atomic;

 /* flush_start */


926: begin_atomic;

63: nop; 

927: nop; 

/* Statement if (turn_cnt_p1 != 0) */ 

931: if (*) goto 929;
928: assume(!((B1 != 0))); 

932: nop; 

/* Statement if (*) */ 

935: if (*) goto 933;

936: nop; 

/* Statement turn = turn_1_p1 */
937:  load t15 = B15;

 /* update predicate - B14: (turn = 0) */
938:   store B14 = choose((t15 != 0), (t15 == 0));


939: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

940: nop; 

/* Statement turn_cnt_p1 = turn_cnt_p1 - 1 */
941:  load t1 = B1;
942:  load t2 = B2;

 /* update predicate - B1: (turn_cnt_p1 = 0) */
943:   store B1 = choose((t2 != 0), (t1 != 0) || (t2 == 0));


 /* update predicate - B2: (turn_cnt_p1 = 1) */
944:   store B2 = choose(false, (t1 != 0) || (t2 != 0));


945: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

946: if (true) goto 934;
933: nop;

934: nop;

947: if (true) goto 930;
929: nop;
948: assume(!((B1 == 0) || (B2 != 0))); 

930: nop;

949: nop; 

/* Statement if (flag0_cnt_p1 != 0) */ 

953: if (*) goto 951;
950: assume(!((B3 != 0))); 

954: nop; 

/* Statement if (*) */ 

957: if (*) goto 955;

958: nop; 

/* Statement flag0 = flag0_1_p1 */
959:  load t12 = B12;

 /* update predicate - B11: (flag0 = 0) */
960:   store B11 = choose((t12 != 0), (t12 == 0));


961: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

962: nop; 

/* Statement flag0_cnt_p1 = flag0_cnt_p1 - 1 */
963:  load t3 = B3;
964:  load t4 = B4;

 /* update predicate - B3: (flag0_cnt_p1 = 0) */
965:   store B3 = choose((t4 != 0), (t3 != 0) || (t4 == 0));


 /* update predicate - B4: (flag0_cnt_p1 = 1) */
966:   store B4 = choose(false, (t3 != 0) || (t4 != 0));


967: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

968: if (true) goto 956;
955: nop;

956: nop;

969: if (true) goto 952;
951: nop;
970: assume(!((B3 == 0) || (B4 != 0))); 

952: nop;

971: nop; 

/* Statement if (*) */ 

974: if (*) goto 972;

/* Statement goto goto 63 */ 
975:   if (true) goto 63; 

976: if (true) goto 973;
972: nop;

973: nop;

977: end_atomic;

 /* flush_end */


978: begin_atomic;

/* Statement: fence_start; */


979: nop; 

/* Statement if (turn_cnt_p1 = 1) */ 

983: if (*) goto 981;
980: assume(!((B1 != 0) || (B2 == 0))); 

984: nop; 

/* Statement turn = turn_1_p1 */
985:  load t15 = B15;

 /* update predicate - B14: (turn = 0) */
986:   store B14 = choose((t15 != 0), (t15 == 0));


987: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

988: if (true) goto 982;
981: nop;
989: assume(!((B2 != 0))); 

982: nop;

990: nop; 

/* Statement turn_cnt_p1 = 0 */

 /* update predicate - B1: (turn_cnt_p1 = 0) */
991:   store B1 = choose(true, false);


 /* update predicate - B2: (turn_cnt_p1 = 1) */
992:   store B2 = choose(false, true);


993: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

994: nop; 

/* Statement if (flag0_cnt_p1 = 1) */ 

998: if (*) goto 996;
995: assume(!((B3 != 0) || (B4 == 0))); 

999: nop; 

/* Statement flag0 = flag0_1_p1 */
1000:  load t12 = B12;

 /* update predicate - B11: (flag0 = 0) */
1001:   store B11 = choose((t12 != 0), (t12 == 0));


1002: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1003: if (true) goto 997;
996: nop;
1004: assume(!((B4 != 0))); 

997: nop;

1005: nop; 

/* Statement flag0_cnt_p1 = 0 */

 /* update predicate - B3: (flag0_cnt_p1 = 0) */
1006:   store B3 = choose(true, false);


 /* update predicate - B4: (flag0_cnt_p1 = 1) */
1007:   store B4 = choose(false, true);


1008: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

/* fence_end */


1009: end_atomic;

7: nop; 

/* Statement: load t1 = turn; */


1010: begin_atomic;

1011: nop; 

/* Statement if (turn_cnt_p1 = 0) */ 

1015: if (*) goto 1013;
1012: assume(!((B1 == 0) || (B2 != 0))); 

1016: nop; 

/* Statement t1 = turn */
1017:  load t14 = B14;

 /* update predicate - B8: (t1 = 0) */
1018:   store B8 = choose((t14 != 0), (t14 == 0));


1019: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1020: if (true) goto 1014;
1013: nop;
1021: assume(!((B1 != 0))); 

1014: nop;

1022: nop; 

/* Statement if (turn_cnt_p1 = 1) */ 

1026: if (*) goto 1024;
1023: assume(!((B1 != 0) || (B2 == 0))); 

1027: nop; 

/* Statement t1 = turn_1_p1 */
1028:  load t15 = B15;

 /* update predicate - B8: (t1 = 0) */
1029:   store B8 = choose((t15 != 0), (t15 == 0));


1030: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1031: if (true) goto 1025;
1024: nop;
1032: assume(!((B2 != 0))); 

1025: nop;

1033: end_atomic;

 /* flush_start */


1034: begin_atomic;

64: nop; 

1035: nop; 

/* Statement if (turn_cnt_p1 != 0) */ 

1039: if (*) goto 1037;
1036: assume(!((B1 != 0))); 

1040: nop; 

/* Statement if (*) */ 

1043: if (*) goto 1041;

1044: nop; 

/* Statement turn = turn_1_p1 */
1045:  load t15 = B15;

 /* update predicate - B14: (turn = 0) */
1046:   store B14 = choose((t15 != 0), (t15 == 0));


1047: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1048: nop; 

/* Statement turn_cnt_p1 = turn_cnt_p1 - 1 */
1049:  load t1 = B1;
1050:  load t2 = B2;

 /* update predicate - B1: (turn_cnt_p1 = 0) */
1051:   store B1 = choose((t2 != 0), (t1 != 0) || (t2 == 0));


 /* update predicate - B2: (turn_cnt_p1 = 1) */
1052:   store B2 = choose(false, (t1 != 0) || (t2 != 0));


1053: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1054: if (true) goto 1042;
1041: nop;

1042: nop;

1055: if (true) goto 1038;
1037: nop;
1056: assume(!((B1 == 0) || (B2 != 0))); 

1038: nop;

1057: nop; 

/* Statement if (flag0_cnt_p1 != 0) */ 

1061: if (*) goto 1059;
1058: assume(!((B3 != 0))); 

1062: nop; 

/* Statement if (*) */ 

1065: if (*) goto 1063;

1066: nop; 

/* Statement flag0 = flag0_1_p1 */
1067:  load t12 = B12;

 /* update predicate - B11: (flag0 = 0) */
1068:   store B11 = choose((t12 != 0), (t12 == 0));


1069: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1070: nop; 

/* Statement flag0_cnt_p1 = flag0_cnt_p1 - 1 */
1071:  load t3 = B3;
1072:  load t4 = B4;

 /* update predicate - B3: (flag0_cnt_p1 = 0) */
1073:   store B3 = choose((t4 != 0), (t3 != 0) || (t4 == 0));


 /* update predicate - B4: (flag0_cnt_p1 = 1) */
1074:   store B4 = choose(false, (t3 != 0) || (t4 != 0));


1075: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1076: if (true) goto 1064;
1063: nop;

1064: nop;

1077: if (true) goto 1060;
1059: nop;
1078: assume(!((B3 == 0) || (B4 != 0))); 

1060: nop;

1079: nop; 

/* Statement if (*) */ 

1082: if (*) goto 1080;

/* Statement goto goto 64 */ 
1083:   if (true) goto 64; 

1084: if (true) goto 1081;
1080: nop;

1081: nop;

1085: end_atomic;

 /* flush_end */


8: nop; 

/* Statement if ((t1 != 0)) */ 

1089: if (*) goto 1087;
1086: assume(!((B8 != 0))); 

 /* flush_start */


1090: begin_atomic;

65: nop; 

1091: nop; 

/* Statement if (turn_cnt_p1 != 0) */ 

1095: if (*) goto 1093;
1092: assume(!((B1 != 0))); 

1096: nop; 

/* Statement if (*) */ 

1099: if (*) goto 1097;

1100: nop; 

/* Statement turn = turn_1_p1 */
1101:  load t15 = B15;

 /* update predicate - B14: (turn = 0) */
1102:   store B14 = choose((t15 != 0), (t15 == 0));


1103: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1104: nop; 

/* Statement turn_cnt_p1 = turn_cnt_p1 - 1 */
1105:  load t1 = B1;
1106:  load t2 = B2;

 /* update predicate - B1: (turn_cnt_p1 = 0) */
1107:   store B1 = choose((t2 != 0), (t1 != 0) || (t2 == 0));


 /* update predicate - B2: (turn_cnt_p1 = 1) */
1108:   store B2 = choose(false, (t1 != 0) || (t2 != 0));


1109: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1110: if (true) goto 1098;
1097: nop;

1098: nop;

1111: if (true) goto 1094;
1093: nop;
1112: assume(!((B1 == 0) || (B2 != 0))); 

1094: nop;

1113: nop; 

/* Statement if (flag0_cnt_p1 != 0) */ 

1117: if (*) goto 1115;
1114: assume(!((B3 != 0))); 

1118: nop; 

/* Statement if (*) */ 

1121: if (*) goto 1119;

1122: nop; 

/* Statement flag0 = flag0_1_p1 */
1123:  load t12 = B12;

 /* update predicate - B11: (flag0 = 0) */
1124:   store B11 = choose((t12 != 0), (t12 == 0));


1125: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1126: nop; 

/* Statement flag0_cnt_p1 = flag0_cnt_p1 - 1 */
1127:  load t3 = B3;
1128:  load t4 = B4;

 /* update predicate - B3: (flag0_cnt_p1 = 0) */
1129:   store B3 = choose((t4 != 0), (t3 != 0) || (t4 == 0));


 /* update predicate - B4: (flag0_cnt_p1 = 1) */
1130:   store B4 = choose(false, (t3 != 0) || (t4 != 0));


1131: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1132: if (true) goto 1120;
1119: nop;

1120: nop;

1133: if (true) goto 1116;
1115: nop;
1134: assume(!((B3 == 0) || (B4 != 0))); 

1116: nop;

1135: nop; 

/* Statement if (*) */ 

1138: if (*) goto 1136;

/* Statement goto goto 65 */ 
1139:   if (true) goto 65; 

1140: if (true) goto 1137;
1136: nop;

1137: nop;

1141: end_atomic;

 /* flush_end */


/* Statement goto goto 7 */ 
1142:   if (true) goto 7; 

 /* flush_start */


1143: begin_atomic;

66: nop; 

1144: nop; 

/* Statement if (turn_cnt_p1 != 0) */ 

1148: if (*) goto 1146;
1145: assume(!((B1 != 0))); 

1149: nop; 

/* Statement if (*) */ 

1152: if (*) goto 1150;

1153: nop; 

/* Statement turn = turn_1_p1 */
1154:  load t15 = B15;

 /* update predicate - B14: (turn = 0) */
1155:   store B14 = choose((t15 != 0), (t15 == 0));


1156: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1157: nop; 

/* Statement turn_cnt_p1 = turn_cnt_p1 - 1 */
1158:  load t1 = B1;
1159:  load t2 = B2;

 /* update predicate - B1: (turn_cnt_p1 = 0) */
1160:   store B1 = choose((t2 != 0), (t1 != 0) || (t2 == 0));


 /* update predicate - B2: (turn_cnt_p1 = 1) */
1161:   store B2 = choose(false, (t1 != 0) || (t2 != 0));


1162: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1163: if (true) goto 1151;
1150: nop;

1151: nop;

1164: if (true) goto 1147;
1146: nop;
1165: assume(!((B1 == 0) || (B2 != 0))); 

1147: nop;

1166: nop; 

/* Statement if (flag0_cnt_p1 != 0) */ 

1170: if (*) goto 1168;
1167: assume(!((B3 != 0))); 

1171: nop; 

/* Statement if (*) */ 

1174: if (*) goto 1172;

1175: nop; 

/* Statement flag0 = flag0_1_p1 */
1176:  load t12 = B12;

 /* update predicate - B11: (flag0 = 0) */
1177:   store B11 = choose((t12 != 0), (t12 == 0));


1178: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1179: nop; 

/* Statement flag0_cnt_p1 = flag0_cnt_p1 - 1 */
1180:  load t3 = B3;
1181:  load t4 = B4;

 /* update predicate - B3: (flag0_cnt_p1 = 0) */
1182:   store B3 = choose((t4 != 0), (t3 != 0) || (t4 == 0));


 /* update predicate - B4: (flag0_cnt_p1 = 1) */
1183:   store B4 = choose(false, (t3 != 0) || (t4 != 0));


1184: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1185: if (true) goto 1173;
1172: nop;

1173: nop;

1186: if (true) goto 1169;
1168: nop;
1187: assume(!((B3 == 0) || (B4 != 0))); 

1169: nop;

1188: nop; 

/* Statement if (*) */ 

1191: if (*) goto 1189;

/* Statement goto goto 66 */ 
1192:   if (true) goto 66; 

1193: if (true) goto 1190;
1189: nop;

1190: nop;

1194: end_atomic;

 /* flush_end */


1195: if (true) goto 1088;
1087: nop;
1196: assume(!((B8 == 0))); 

 /* flush_start */


1197: begin_atomic;

67: nop; 

1198: nop; 

/* Statement if (turn_cnt_p1 != 0) */ 

1202: if (*) goto 1200;
1199: assume(!((B1 != 0))); 

1203: nop; 

/* Statement if (*) */ 

1206: if (*) goto 1204;

1207: nop; 

/* Statement turn = turn_1_p1 */
1208:  load t15 = B15;

 /* update predicate - B14: (turn = 0) */
1209:   store B14 = choose((t15 != 0), (t15 == 0));


1210: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1211: nop; 

/* Statement turn_cnt_p1 = turn_cnt_p1 - 1 */
1212:  load t1 = B1;
1213:  load t2 = B2;

 /* update predicate - B1: (turn_cnt_p1 = 0) */
1214:   store B1 = choose((t2 != 0), (t1 != 0) || (t2 == 0));


 /* update predicate - B2: (turn_cnt_p1 = 1) */
1215:   store B2 = choose(false, (t1 != 0) || (t2 != 0));


1216: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1217: if (true) goto 1205;
1204: nop;

1205: nop;

1218: if (true) goto 1201;
1200: nop;
1219: assume(!((B1 == 0) || (B2 != 0))); 

1201: nop;

1220: nop; 

/* Statement if (flag0_cnt_p1 != 0) */ 

1224: if (*) goto 1222;
1221: assume(!((B3 != 0))); 

1225: nop; 

/* Statement if (*) */ 

1228: if (*) goto 1226;

1229: nop; 

/* Statement flag0 = flag0_1_p1 */
1230:  load t12 = B12;

 /* update predicate - B11: (flag0 = 0) */
1231:   store B11 = choose((t12 != 0), (t12 == 0));


1232: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1233: nop; 

/* Statement flag0_cnt_p1 = flag0_cnt_p1 - 1 */
1234:  load t3 = B3;
1235:  load t4 = B4;

 /* update predicate - B3: (flag0_cnt_p1 = 0) */
1236:   store B3 = choose((t4 != 0), (t3 != 0) || (t4 == 0));


 /* update predicate - B4: (flag0_cnt_p1 = 1) */
1237:   store B4 = choose(false, (t3 != 0) || (t4 != 0));


1238: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1239: if (true) goto 1227;
1226: nop;

1227: nop;

1240: if (true) goto 1223;
1222: nop;
1241: assume(!((B3 == 0) || (B4 != 0))); 

1223: nop;

1242: nop; 

/* Statement if (*) */ 

1245: if (*) goto 1243;

/* Statement goto goto 67 */ 
1246:   if (true) goto 67; 

1247: if (true) goto 1244;
1243: nop;

1244: nop;

1248: end_atomic;

 /* flush_end */


1088: nop;

 /* flush_start */


1249: begin_atomic;

68: nop; 

1250: nop; 

/* Statement if (turn_cnt_p1 != 0) */ 

1254: if (*) goto 1252;
1251: assume(!((B1 != 0))); 

1255: nop; 

/* Statement if (*) */ 

1258: if (*) goto 1256;

1259: nop; 

/* Statement turn = turn_1_p1 */
1260:  load t15 = B15;

 /* update predicate - B14: (turn = 0) */
1261:   store B14 = choose((t15 != 0), (t15 == 0));


1262: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1263: nop; 

/* Statement turn_cnt_p1 = turn_cnt_p1 - 1 */
1264:  load t1 = B1;
1265:  load t2 = B2;

 /* update predicate - B1: (turn_cnt_p1 = 0) */
1266:   store B1 = choose((t2 != 0), (t1 != 0) || (t2 == 0));


 /* update predicate - B2: (turn_cnt_p1 = 1) */
1267:   store B2 = choose(false, (t1 != 0) || (t2 != 0));


1268: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1269: if (true) goto 1257;
1256: nop;

1257: nop;

1270: if (true) goto 1253;
1252: nop;
1271: assume(!((B1 == 0) || (B2 != 0))); 

1253: nop;

1272: nop; 

/* Statement if (flag0_cnt_p1 != 0) */ 

1276: if (*) goto 1274;
1273: assume(!((B3 != 0))); 

1277: nop; 

/* Statement if (*) */ 

1280: if (*) goto 1278;

1281: nop; 

/* Statement flag0 = flag0_1_p1 */
1282:  load t12 = B12;

 /* update predicate - B11: (flag0 = 0) */
1283:   store B11 = choose((t12 != 0), (t12 == 0));


1284: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1285: nop; 

/* Statement flag0_cnt_p1 = flag0_cnt_p1 - 1 */
1286:  load t3 = B3;
1287:  load t4 = B4;

 /* update predicate - B3: (flag0_cnt_p1 = 0) */
1288:   store B3 = choose((t4 != 0), (t3 != 0) || (t4 == 0));


 /* update predicate - B4: (flag0_cnt_p1 = 1) */
1289:   store B4 = choose(false, (t3 != 0) || (t4 != 0));


1290: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1291: if (true) goto 1279;
1278: nop;

1279: nop;

1292: if (true) goto 1275;
1274: nop;
1293: assume(!((B3 == 0) || (B4 != 0))); 

1275: nop;

1294: nop; 

/* Statement if (*) */ 

1297: if (*) goto 1295;

/* Statement goto goto 68 */ 
1298:   if (true) goto 68; 

1299: if (true) goto 1296;
1295: nop;

1296: nop;

1300: end_atomic;

 /* flush_end */


9: begin_atomic;

/* Statement: store flag0 = 1; */


1301: nop; 

/* Statement if (flag0_cnt_p1 = 1) */ 

1305: if (*) goto 1303;
1302: assume(!((B3 != 0) || (B4 == 0))); 

1306: nop; 

/* Statement overflow = 1 */

 /* update predicate - B0: (overflow = 0) */
1307:   store B0 = choose(false, true);


1308: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1309: if (true) goto 1304;
1303: nop;
1310: assume(!((B4 != 0))); 

1304: nop;

1311: nop; 

/* Statement flag0_cnt_p1 = flag0_cnt_p1 + 1 */
1312:  load t3 = B3;
1313:  load t4 = B4;

 /* update predicate - B3: (flag0_cnt_p1 = 0) */
1314:   store B3 = choose(false, (t3 != 0) || (t4 != 0));


 /* update predicate - B4: (flag0_cnt_p1 = 1) */
1315:   store B4 = choose((t3 != 0), (t3 == 0) || (t4 != 0));


1316: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1317: nop; 

/* Statement if (flag0_cnt_p1 = 1) */ 

1321: if (*) goto 1319;
1318: assume(!((B3 != 0) || (B4 == 0))); 

1322: nop; 

/* Statement flag0_1_p1 = 1 */

 /* update predicate - B12: (flag0_1_p1 = 0) */
1323:   store B12 = choose(false, true);


1324: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1325: if (true) goto 1320;
1319: nop;
1326: assume(!((B4 != 0))); 

1320: nop;

1327: end_atomic;

 /* flush_start */


1328: begin_atomic;

69: nop; 

1329: nop; 

/* Statement if (turn_cnt_p1 != 0) */ 

1333: if (*) goto 1331;
1330: assume(!((B1 != 0))); 

1334: nop; 

/* Statement if (*) */ 

1337: if (*) goto 1335;

1338: nop; 

/* Statement turn = turn_1_p1 */
1339:  load t15 = B15;

 /* update predicate - B14: (turn = 0) */
1340:   store B14 = choose((t15 != 0), (t15 == 0));


1341: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1342: nop; 

/* Statement turn_cnt_p1 = turn_cnt_p1 - 1 */
1343:  load t1 = B1;
1344:  load t2 = B2;

 /* update predicate - B1: (turn_cnt_p1 = 0) */
1345:   store B1 = choose((t2 != 0), (t1 != 0) || (t2 == 0));


 /* update predicate - B2: (turn_cnt_p1 = 1) */
1346:   store B2 = choose(false, (t1 != 0) || (t2 != 0));


1347: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1348: if (true) goto 1336;
1335: nop;

1336: nop;

1349: if (true) goto 1332;
1331: nop;
1350: assume(!((B1 == 0) || (B2 != 0))); 

1332: nop;

1351: nop; 

/* Statement if (flag0_cnt_p1 != 0) */ 

1355: if (*) goto 1353;
1352: assume(!((B3 != 0))); 

1356: nop; 

/* Statement if (*) */ 

1359: if (*) goto 1357;

1360: nop; 

/* Statement flag0 = flag0_1_p1 */
1361:  load t12 = B12;

 /* update predicate - B11: (flag0 = 0) */
1362:   store B11 = choose((t12 != 0), (t12 == 0));


1363: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1364: nop; 

/* Statement flag0_cnt_p1 = flag0_cnt_p1 - 1 */
1365:  load t3 = B3;
1366:  load t4 = B4;

 /* update predicate - B3: (flag0_cnt_p1 = 0) */
1367:   store B3 = choose((t4 != 0), (t3 != 0) || (t4 == 0));


 /* update predicate - B4: (flag0_cnt_p1 = 1) */
1368:   store B4 = choose(false, (t3 != 0) || (t4 != 0));


1369: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1370: if (true) goto 1358;
1357: nop;

1358: nop;

1371: if (true) goto 1354;
1353: nop;
1372: assume(!((B3 == 0) || (B4 != 0))); 

1354: nop;

1373: nop; 

/* Statement if (*) */ 

1376: if (*) goto 1374;

/* Statement goto goto 69 */ 
1377:   if (true) goto 69; 

1378: if (true) goto 1375;
1374: nop;

1375: nop;

1379: end_atomic;

 /* flush_end */


/* Statement 10: goto goto 2 */ 
10:   if (true) goto 2; 

 /* flush_start */


1380: begin_atomic;

70: nop; 

1381: nop; 

/* Statement if (turn_cnt_p1 != 0) */ 

1385: if (*) goto 1383;
1382: assume(!((B1 != 0))); 

1386: nop; 

/* Statement if (*) */ 

1389: if (*) goto 1387;

1390: nop; 

/* Statement turn = turn_1_p1 */
1391:  load t15 = B15;

 /* update predicate - B14: (turn = 0) */
1392:   store B14 = choose((t15 != 0), (t15 == 0));


1393: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1394: nop; 

/* Statement turn_cnt_p1 = turn_cnt_p1 - 1 */
1395:  load t1 = B1;
1396:  load t2 = B2;

 /* update predicate - B1: (turn_cnt_p1 = 0) */
1397:   store B1 = choose((t2 != 0), (t1 != 0) || (t2 == 0));


 /* update predicate - B2: (turn_cnt_p1 = 1) */
1398:   store B2 = choose(false, (t1 != 0) || (t2 != 0));


1399: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1400: if (true) goto 1388;
1387: nop;

1388: nop;

1401: if (true) goto 1384;
1383: nop;
1402: assume(!((B1 == 0) || (B2 != 0))); 

1384: nop;

1403: nop; 

/* Statement if (flag0_cnt_p1 != 0) */ 

1407: if (*) goto 1405;
1404: assume(!((B3 != 0))); 

1408: nop; 

/* Statement if (*) */ 

1411: if (*) goto 1409;

1412: nop; 

/* Statement flag0 = flag0_1_p1 */
1413:  load t12 = B12;

 /* update predicate - B11: (flag0 = 0) */
1414:   store B11 = choose((t12 != 0), (t12 == 0));


1415: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1416: nop; 

/* Statement flag0_cnt_p1 = flag0_cnt_p1 - 1 */
1417:  load t3 = B3;
1418:  load t4 = B4;

 /* update predicate - B3: (flag0_cnt_p1 = 0) */
1419:   store B3 = choose((t4 != 0), (t3 != 0) || (t4 == 0));


 /* update predicate - B4: (flag0_cnt_p1 = 1) */
1420:   store B4 = choose(false, (t3 != 0) || (t4 != 0));


1421: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1422: if (true) goto 1410;
1409: nop;

1410: nop;

1423: if (true) goto 1406;
1405: nop;
1424: assume(!((B3 == 0) || (B4 != 0))); 

1406: nop;

1425: nop; 

/* Statement if (*) */ 

1428: if (*) goto 1426;

/* Statement goto goto 70 */ 
1429:   if (true) goto 70; 

1430: if (true) goto 1427;
1426: nop;

1427: nop;

1431: end_atomic;

 /* flush_end */


11: nop; 

 /* flush_start */


1432: begin_atomic;

71: nop; 

1433: nop; 

/* Statement if (turn_cnt_p1 != 0) */ 

1437: if (*) goto 1435;
1434: assume(!((B1 != 0))); 

1438: nop; 

/* Statement if (*) */ 

1441: if (*) goto 1439;

1442: nop; 

/* Statement turn = turn_1_p1 */
1443:  load t15 = B15;

 /* update predicate - B14: (turn = 0) */
1444:   store B14 = choose((t15 != 0), (t15 == 0));


1445: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1446: nop; 

/* Statement turn_cnt_p1 = turn_cnt_p1 - 1 */
1447:  load t1 = B1;
1448:  load t2 = B2;

 /* update predicate - B1: (turn_cnt_p1 = 0) */
1449:   store B1 = choose((t2 != 0), (t1 != 0) || (t2 == 0));


 /* update predicate - B2: (turn_cnt_p1 = 1) */
1450:   store B2 = choose(false, (t1 != 0) || (t2 != 0));


1451: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1452: if (true) goto 1440;
1439: nop;

1440: nop;

1453: if (true) goto 1436;
1435: nop;
1454: assume(!((B1 == 0) || (B2 != 0))); 

1436: nop;

1455: nop; 

/* Statement if (flag0_cnt_p1 != 0) */ 

1459: if (*) goto 1457;
1456: assume(!((B3 != 0))); 

1460: nop; 

/* Statement if (*) */ 

1463: if (*) goto 1461;

1464: nop; 

/* Statement flag0 = flag0_1_p1 */
1465:  load t12 = B12;

 /* update predicate - B11: (flag0 = 0) */
1466:   store B11 = choose((t12 != 0), (t12 == 0));


1467: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1468: nop; 

/* Statement flag0_cnt_p1 = flag0_cnt_p1 - 1 */
1469:  load t3 = B3;
1470:  load t4 = B4;

 /* update predicate - B3: (flag0_cnt_p1 = 0) */
1471:   store B3 = choose((t4 != 0), (t3 != 0) || (t4 == 0));


 /* update predicate - B4: (flag0_cnt_p1 = 1) */
1472:   store B4 = choose(false, (t3 != 0) || (t4 != 0));


1473: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1474: if (true) goto 1462;
1461: nop;

1462: nop;

1475: if (true) goto 1458;
1457: nop;
1476: assume(!((B3 == 0) || (B4 != 0))); 

1458: nop;

1477: nop; 

/* Statement if (*) */ 

1480: if (*) goto 1478;

/* Statement goto goto 71 */ 
1481:   if (true) goto 71; 

1482: if (true) goto 1479;
1478: nop;

1479: nop;

1483: end_atomic;

 /* flush_end */


12: begin_atomic;

/* Statement: store turn = 1; */


1484: nop; 

/* Statement if (turn_cnt_p1 = 1) */ 

1488: if (*) goto 1486;
1485: assume(!((B1 != 0) || (B2 == 0))); 

1489: nop; 

/* Statement overflow = 1 */

 /* update predicate - B0: (overflow = 0) */
1490:   store B0 = choose(false, true);


1491: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1492: if (true) goto 1487;
1486: nop;
1493: assume(!((B2 != 0))); 

1487: nop;

1494: nop; 

/* Statement turn_cnt_p1 = turn_cnt_p1 + 1 */
1495:  load t1 = B1;
1496:  load t2 = B2;

 /* update predicate - B1: (turn_cnt_p1 = 0) */
1497:   store B1 = choose(false, (t1 != 0) || (t2 != 0));


 /* update predicate - B2: (turn_cnt_p1 = 1) */
1498:   store B2 = choose((t1 != 0), (t1 == 0) || (t2 != 0));


1499: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1500: nop; 

/* Statement if (turn_cnt_p1 = 1) */ 

1504: if (*) goto 1502;
1501: assume(!((B1 != 0) || (B2 == 0))); 

1505: nop; 

/* Statement turn_1_p1 = 1 */

 /* update predicate - B15: (turn_1_p1 = 0) */
1506:   store B15 = choose(false, true);


1507: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1508: if (true) goto 1503;
1502: nop;
1509: assume(!((B2 != 0))); 

1503: nop;

1510: end_atomic;

 /* flush_start */


1511: begin_atomic;

72: nop; 

1512: nop; 

/* Statement if (turn_cnt_p1 != 0) */ 

1516: if (*) goto 1514;
1513: assume(!((B1 != 0))); 

1517: nop; 

/* Statement if (*) */ 

1520: if (*) goto 1518;

1521: nop; 

/* Statement turn = turn_1_p1 */
1522:  load t15 = B15;

 /* update predicate - B14: (turn = 0) */
1523:   store B14 = choose((t15 != 0), (t15 == 0));


1524: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1525: nop; 

/* Statement turn_cnt_p1 = turn_cnt_p1 - 1 */
1526:  load t1 = B1;
1527:  load t2 = B2;

 /* update predicate - B1: (turn_cnt_p1 = 0) */
1528:   store B1 = choose((t2 != 0), (t1 != 0) || (t2 == 0));


 /* update predicate - B2: (turn_cnt_p1 = 1) */
1529:   store B2 = choose(false, (t1 != 0) || (t2 != 0));


1530: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1531: if (true) goto 1519;
1518: nop;

1519: nop;

1532: if (true) goto 1515;
1514: nop;
1533: assume(!((B1 == 0) || (B2 != 0))); 

1515: nop;

1534: nop; 

/* Statement if (flag0_cnt_p1 != 0) */ 

1538: if (*) goto 1536;
1535: assume(!((B3 != 0))); 

1539: nop; 

/* Statement if (*) */ 

1542: if (*) goto 1540;

1543: nop; 

/* Statement flag0 = flag0_1_p1 */
1544:  load t12 = B12;

 /* update predicate - B11: (flag0 = 0) */
1545:   store B11 = choose((t12 != 0), (t12 == 0));


1546: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1547: nop; 

/* Statement flag0_cnt_p1 = flag0_cnt_p1 - 1 */
1548:  load t3 = B3;
1549:  load t4 = B4;

 /* update predicate - B3: (flag0_cnt_p1 = 0) */
1550:   store B3 = choose((t4 != 0), (t3 != 0) || (t4 == 0));


 /* update predicate - B4: (flag0_cnt_p1 = 1) */
1551:   store B4 = choose(false, (t3 != 0) || (t4 != 0));


1552: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1553: if (true) goto 1541;
1540: nop;

1541: nop;

1554: if (true) goto 1537;
1536: nop;
1555: assume(!((B3 == 0) || (B4 != 0))); 

1537: nop;

1556: nop; 

/* Statement if (*) */ 

1559: if (*) goto 1557;

/* Statement goto goto 72 */ 
1560:   if (true) goto 72; 

1561: if (true) goto 1558;
1557: nop;

1558: nop;

1562: end_atomic;

 /* flush_end */


1563: begin_atomic;

/* Statement: fence_start; */


1564: nop; 

/* Statement if (turn_cnt_p1 = 1) */ 

1568: if (*) goto 1566;
1565: assume(!((B1 != 0) || (B2 == 0))); 

1569: nop; 

/* Statement turn = turn_1_p1 */
1570:  load t15 = B15;

 /* update predicate - B14: (turn = 0) */
1571:   store B14 = choose((t15 != 0), (t15 == 0));


1572: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1573: if (true) goto 1567;
1566: nop;
1574: assume(!((B2 != 0))); 

1567: nop;

1575: nop; 

/* Statement turn_cnt_p1 = 0 */

 /* update predicate - B1: (turn_cnt_p1 = 0) */
1576:   store B1 = choose(true, false);


 /* update predicate - B2: (turn_cnt_p1 = 1) */
1577:   store B2 = choose(false, true);


1578: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1579: nop; 

/* Statement if (flag0_cnt_p1 = 1) */ 

1583: if (*) goto 1581;
1580: assume(!((B3 != 0) || (B4 == 0))); 

1584: nop; 

/* Statement flag0 = flag0_1_p1 */
1585:  load t12 = B12;

 /* update predicate - B11: (flag0 = 0) */
1586:   store B11 = choose((t12 != 0), (t12 == 0));


1587: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1588: if (true) goto 1582;
1581: nop;
1589: assume(!((B4 != 0))); 

1582: nop;

1590: nop; 

/* Statement flag0_cnt_p1 = 0 */

 /* update predicate - B3: (flag0_cnt_p1 = 0) */
1591:   store B3 = choose(true, false);


 /* update predicate - B4: (flag0_cnt_p1 = 1) */
1592:   store B4 = choose(false, true);


1593: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

/* fence_end */


1594: end_atomic;

13: begin_atomic;

/* Statement: store flag0 = 0; */


1595: nop; 

/* Statement if (flag0_cnt_p1 = 1) */ 

1599: if (*) goto 1597;
1596: assume(!((B3 != 0) || (B4 == 0))); 

1600: nop; 

/* Statement overflow = 1 */

 /* update predicate - B0: (overflow = 0) */
1601:   store B0 = choose(false, true);


1602: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1603: if (true) goto 1598;
1597: nop;
1604: assume(!((B4 != 0))); 

1598: nop;

1605: nop; 

/* Statement flag0_cnt_p1 = flag0_cnt_p1 + 1 */
1606:  load t3 = B3;
1607:  load t4 = B4;

 /* update predicate - B3: (flag0_cnt_p1 = 0) */
1608:   store B3 = choose(false, (t3 != 0) || (t4 != 0));


 /* update predicate - B4: (flag0_cnt_p1 = 1) */
1609:   store B4 = choose((t3 != 0), (t3 == 0) || (t4 != 0));


1610: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1611: nop; 

/* Statement if (flag0_cnt_p1 = 1) */ 

1615: if (*) goto 1613;
1612: assume(!((B3 != 0) || (B4 == 0))); 

1616: nop; 

/* Statement flag0_1_p1 = 0 */

 /* update predicate - B12: (flag0_1_p1 = 0) */
1617:   store B12 = choose(true, false);


1618: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1619: if (true) goto 1614;
1613: nop;
1620: assume(!((B4 != 0))); 

1614: nop;

1621: end_atomic;

 /* flush_start */


1622: begin_atomic;

73: nop; 

1623: nop; 

/* Statement if (turn_cnt_p1 != 0) */ 

1627: if (*) goto 1625;
1624: assume(!((B1 != 0))); 

1628: nop; 

/* Statement if (*) */ 

1631: if (*) goto 1629;

1632: nop; 

/* Statement turn = turn_1_p1 */
1633:  load t15 = B15;

 /* update predicate - B14: (turn = 0) */
1634:   store B14 = choose((t15 != 0), (t15 == 0));


1635: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1636: nop; 

/* Statement turn_cnt_p1 = turn_cnt_p1 - 1 */
1637:  load t1 = B1;
1638:  load t2 = B2;

 /* update predicate - B1: (turn_cnt_p1 = 0) */
1639:   store B1 = choose((t2 != 0), (t1 != 0) || (t2 == 0));


 /* update predicate - B2: (turn_cnt_p1 = 1) */
1640:   store B2 = choose(false, (t1 != 0) || (t2 != 0));


1641: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1642: if (true) goto 1630;
1629: nop;

1630: nop;

1643: if (true) goto 1626;
1625: nop;
1644: assume(!((B1 == 0) || (B2 != 0))); 

1626: nop;

1645: nop; 

/* Statement if (flag0_cnt_p1 != 0) */ 

1649: if (*) goto 1647;
1646: assume(!((B3 != 0))); 

1650: nop; 

/* Statement if (*) */ 

1653: if (*) goto 1651;

1654: nop; 

/* Statement flag0 = flag0_1_p1 */
1655:  load t12 = B12;

 /* update predicate - B11: (flag0 = 0) */
1656:   store B11 = choose((t12 != 0), (t12 == 0));


1657: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1658: nop; 

/* Statement flag0_cnt_p1 = flag0_cnt_p1 - 1 */
1659:  load t3 = B3;
1660:  load t4 = B4;

 /* update predicate - B3: (flag0_cnt_p1 = 0) */
1661:   store B3 = choose((t4 != 0), (t3 != 0) || (t4 == 0));


 /* update predicate - B4: (flag0_cnt_p1 = 1) */
1662:   store B4 = choose(false, (t3 != 0) || (t4 != 0));


1663: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1664: if (true) goto 1652;
1651: nop;

1652: nop;

1665: if (true) goto 1648;
1647: nop;
1666: assume(!((B3 == 0) || (B4 != 0))); 

1648: nop;

1667: nop; 

/* Statement if (*) */ 

1670: if (*) goto 1668;

/* Statement goto goto 73 */ 
1671:   if (true) goto 73; 

1672: if (true) goto 1669;
1668: nop;

1669: nop;

1673: end_atomic;

 /* flush_end */


1674: begin_atomic;

/* Statement: fence_start; */


1675: nop; 

/* Statement if (turn_cnt_p1 = 1) */ 

1679: if (*) goto 1677;
1676: assume(!((B1 != 0) || (B2 == 0))); 

1680: nop; 

/* Statement turn = turn_1_p1 */
1681:  load t15 = B15;

 /* update predicate - B14: (turn = 0) */
1682:   store B14 = choose((t15 != 0), (t15 == 0));


1683: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1684: if (true) goto 1678;
1677: nop;
1685: assume(!((B2 != 0))); 

1678: nop;

1686: nop; 

/* Statement turn_cnt_p1 = 0 */

 /* update predicate - B1: (turn_cnt_p1 = 0) */
1687:   store B1 = choose(true, false);


 /* update predicate - B2: (turn_cnt_p1 = 1) */
1688:   store B2 = choose(false, true);


1689: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1690: nop; 

/* Statement if (flag0_cnt_p1 = 1) */ 

1694: if (*) goto 1692;
1691: assume(!((B3 != 0) || (B4 == 0))); 

1695: nop; 

/* Statement flag0 = flag0_1_p1 */
1696:  load t12 = B12;

 /* update predicate - B11: (flag0 = 0) */
1697:   store B11 = choose((t12 != 0), (t12 == 0));


1698: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1699: if (true) goto 1693;
1692: nop;
1700: assume(!((B4 != 0))); 

1693: nop;

1701: nop; 

/* Statement flag0_cnt_p1 = 0 */

 /* update predicate - B3: (flag0_cnt_p1 = 0) */
1702:   store B3 = choose(true, false);


 /* update predicate - B4: (flag0_cnt_p1 = 1) */
1703:   store B4 = choose(false, true);


1704: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

/* fence_end */


1705: end_atomic;

/* Statement goto goto 1 */ 
1706:   if (true) goto 1; 

 /* flush_start */


1707: begin_atomic;

74: nop; 

1708: nop; 

/* Statement if (turn_cnt_p1 != 0) */ 

1712: if (*) goto 1710;
1709: assume(!((B1 != 0))); 

1713: nop; 

/* Statement if (*) */ 

1716: if (*) goto 1714;

1717: nop; 

/* Statement turn = turn_1_p1 */
1718:  load t15 = B15;

 /* update predicate - B14: (turn = 0) */
1719:   store B14 = choose((t15 != 0), (t15 == 0));


1720: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1721: nop; 

/* Statement turn_cnt_p1 = turn_cnt_p1 - 1 */
1722:  load t1 = B1;
1723:  load t2 = B2;

 /* update predicate - B1: (turn_cnt_p1 = 0) */
1724:   store B1 = choose((t2 != 0), (t1 != 0) || (t2 == 0));


 /* update predicate - B2: (turn_cnt_p1 = 1) */
1725:   store B2 = choose(false, (t1 != 0) || (t2 != 0));


1726: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1727: if (true) goto 1715;
1714: nop;

1715: nop;

1728: if (true) goto 1711;
1710: nop;
1729: assume(!((B1 == 0) || (B2 != 0))); 

1711: nop;

1730: nop; 

/* Statement if (flag0_cnt_p1 != 0) */ 

1734: if (*) goto 1732;
1731: assume(!((B3 != 0))); 

1735: nop; 

/* Statement if (*) */ 

1738: if (*) goto 1736;

1739: nop; 

/* Statement flag0 = flag0_1_p1 */
1740:  load t12 = B12;

 /* update predicate - B11: (flag0 = 0) */
1741:   store B11 = choose((t12 != 0), (t12 == 0));


1742: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1743: nop; 

/* Statement flag0_cnt_p1 = flag0_cnt_p1 - 1 */
1744:  load t3 = B3;
1745:  load t4 = B4;

 /* update predicate - B3: (flag0_cnt_p1 = 0) */
1746:   store B3 = choose((t4 != 0), (t3 != 0) || (t4 == 0));


 /* update predicate - B4: (flag0_cnt_p1 = 1) */
1747:   store B4 = choose(false, (t3 != 0) || (t4 != 0));


1748: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1749: if (true) goto 1737;
1736: nop;

1737: nop;

1750: if (true) goto 1733;
1732: nop;
1751: assume(!((B3 == 0) || (B4 != 0))); 

1733: nop;

1752: nop; 

/* Statement if (*) */ 

1755: if (*) goto 1753;

/* Statement goto goto 74 */ 
1756:   if (true) goto 74; 

1757: if (true) goto 1754;
1753: nop;

1754: nop;

1758: end_atomic;

 /* flush_end */



process 2
/* initialize counters */


1759: begin_atomic;

1760: nop; 

/* Statement turn_cnt_p2 = 0 */

 /* update predicate - B5: (turn_cnt_p2 = 0) */
1761:   store B5 = choose(true, false);


 /* update predicate - B6: (turn_cnt_p2 = 1) */
1762:   store B6 = choose(false, true);


1763: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1764: end_atomic;

 /* flush_start */


1765: begin_atomic;

75: nop; 

1766: nop; 

/* Statement if (turn_cnt_p2 != 0) */ 

1770: if (*) goto 1768;
1767: assume(!((B5 != 0))); 

1771: nop; 

/* Statement if (*) */ 

1774: if (*) goto 1772;

1775: nop; 

/* Statement turn = turn_1_p2 */
1776:  load t16 = B16;

 /* update predicate - B14: (turn = 0) */
1777:   store B14 = choose((t16 != 0), (t16 == 0));


1778: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1779: nop; 

/* Statement turn_cnt_p2 = turn_cnt_p2 - 1 */
1780:  load t5 = B5;
1781:  load t6 = B6;

 /* update predicate - B5: (turn_cnt_p2 = 0) */
1782:   store B5 = choose((t6 != 0), (t5 != 0) || (t6 == 0));


 /* update predicate - B6: (turn_cnt_p2 = 1) */
1783:   store B6 = choose(false, (t5 != 0) || (t6 != 0));


1784: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1785: if (true) goto 1773;
1772: nop;

1773: nop;

1786: if (true) goto 1769;
1768: nop;
1787: assume(!((B5 == 0) || (B6 != 0))); 

1769: nop;

1788: nop; 

/* Statement if (*) */ 

1791: if (*) goto 1789;

/* Statement goto goto 75 */ 
1792:   if (true) goto 75; 

1793: if (true) goto 1790;
1789: nop;

1790: nop;

1794: end_atomic;

 /* flush_end */


1795: nop; 

 /* flush_start */


1796: begin_atomic;

76: nop; 

1797: nop; 

/* Statement if (turn_cnt_p2 != 0) */ 

1801: if (*) goto 1799;
1798: assume(!((B5 != 0))); 

1802: nop; 

/* Statement if (*) */ 

1805: if (*) goto 1803;

1806: nop; 

/* Statement turn = turn_1_p2 */
1807:  load t16 = B16;

 /* update predicate - B14: (turn = 0) */
1808:   store B14 = choose((t16 != 0), (t16 == 0));


1809: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1810: nop; 

/* Statement turn_cnt_p2 = turn_cnt_p2 - 1 */
1811:  load t5 = B5;
1812:  load t6 = B6;

 /* update predicate - B5: (turn_cnt_p2 = 0) */
1813:   store B5 = choose((t6 != 0), (t5 != 0) || (t6 == 0));


 /* update predicate - B6: (turn_cnt_p2 = 1) */
1814:   store B6 = choose(false, (t5 != 0) || (t6 != 0));


1815: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1816: if (true) goto 1804;
1803: nop;

1804: nop;

1817: if (true) goto 1800;
1799: nop;
1818: assume(!((B5 == 0) || (B6 != 0))); 

1800: nop;

1819: nop; 

/* Statement if (*) */ 

1822: if (*) goto 1820;

/* Statement goto goto 76 */ 
1823:   if (true) goto 76; 

1824: if (true) goto 1821;
1820: nop;

1821: nop;

1825: end_atomic;

 /* flush_end */


1: nop; 

/* Statement flag1 = 1 */
1826: begin_atomic;

 /* update predicate - B13: (flag1 = 0) */
1827:   store B13 = choose(false, true);


1828: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1829: end_atomic;
 /* flush_start */


1830: begin_atomic;

77: nop; 

1831: nop; 

/* Statement if (turn_cnt_p2 != 0) */ 

1835: if (*) goto 1833;
1832: assume(!((B5 != 0))); 

1836: nop; 

/* Statement if (*) */ 

1839: if (*) goto 1837;

1840: nop; 

/* Statement turn = turn_1_p2 */
1841:  load t16 = B16;

 /* update predicate - B14: (turn = 0) */
1842:   store B14 = choose((t16 != 0), (t16 == 0));


1843: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1844: nop; 

/* Statement turn_cnt_p2 = turn_cnt_p2 - 1 */
1845:  load t5 = B5;
1846:  load t6 = B6;

 /* update predicate - B5: (turn_cnt_p2 = 0) */
1847:   store B5 = choose((t6 != 0), (t5 != 0) || (t6 == 0));


 /* update predicate - B6: (turn_cnt_p2 = 1) */
1848:   store B6 = choose(false, (t5 != 0) || (t6 != 0));


1849: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1850: if (true) goto 1838;
1837: nop;

1838: nop;

1851: if (true) goto 1834;
1833: nop;
1852: assume(!((B5 == 0) || (B6 != 0))); 

1834: nop;

1853: nop; 

/* Statement if (*) */ 

1856: if (*) goto 1854;

/* Statement goto goto 77 */ 
1857:   if (true) goto 77; 

1858: if (true) goto 1855;
1854: nop;

1855: nop;

1859: end_atomic;

 /* flush_end */


2: nop; 

1860: nop; 

/* Statement f2 = flag0 */
1861: begin_atomic;
1862:  load t11 = B11;

 /* update predicate - B10: (f2 = 0) */
1863:   store B10 = choose((t11 != 0), (t11 == 0));


1864: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1865: end_atomic;
 /* flush_start */


1866: begin_atomic;

78: nop; 

1867: nop; 

/* Statement if (turn_cnt_p2 != 0) */ 

1871: if (*) goto 1869;
1868: assume(!((B5 != 0))); 

1872: nop; 

/* Statement if (*) */ 

1875: if (*) goto 1873;

1876: nop; 

/* Statement turn = turn_1_p2 */
1877:  load t16 = B16;

 /* update predicate - B14: (turn = 0) */
1878:   store B14 = choose((t16 != 0), (t16 == 0));


1879: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1880: nop; 

/* Statement turn_cnt_p2 = turn_cnt_p2 - 1 */
1881:  load t5 = B5;
1882:  load t6 = B6;

 /* update predicate - B5: (turn_cnt_p2 = 0) */
1883:   store B5 = choose((t6 != 0), (t5 != 0) || (t6 == 0));


 /* update predicate - B6: (turn_cnt_p2 = 1) */
1884:   store B6 = choose(false, (t5 != 0) || (t6 != 0));


1885: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1886: if (true) goto 1874;
1873: nop;

1874: nop;

1887: if (true) goto 1870;
1869: nop;
1888: assume(!((B5 == 0) || (B6 != 0))); 

1870: nop;

1889: nop; 

/* Statement if (*) */ 

1892: if (*) goto 1890;

/* Statement goto goto 78 */ 
1893:   if (true) goto 78; 

1894: if (true) goto 1891;
1890: nop;

1891: nop;

1895: end_atomic;

 /* flush_end */


3: nop; 

/* Statement if ((f2 = 0)) */ 

1899: if (*) goto 1897;
1896: assume(!((B10 == 0))); 

 /* flush_start */


1900: begin_atomic;

79: nop; 

1901: nop; 

/* Statement if (turn_cnt_p2 != 0) */ 

1905: if (*) goto 1903;
1902: assume(!((B5 != 0))); 

1906: nop; 

/* Statement if (*) */ 

1909: if (*) goto 1907;

1910: nop; 

/* Statement turn = turn_1_p2 */
1911:  load t16 = B16;

 /* update predicate - B14: (turn = 0) */
1912:   store B14 = choose((t16 != 0), (t16 == 0));


1913: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1914: nop; 

/* Statement turn_cnt_p2 = turn_cnt_p2 - 1 */
1915:  load t5 = B5;
1916:  load t6 = B6;

 /* update predicate - B5: (turn_cnt_p2 = 0) */
1917:   store B5 = choose((t6 != 0), (t5 != 0) || (t6 == 0));


 /* update predicate - B6: (turn_cnt_p2 = 1) */
1918:   store B6 = choose(false, (t5 != 0) || (t6 != 0));


1919: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1920: if (true) goto 1908;
1907: nop;

1908: nop;

1921: if (true) goto 1904;
1903: nop;
1922: assume(!((B5 == 0) || (B6 != 0))); 

1904: nop;

1923: nop; 

/* Statement if (*) */ 

1926: if (*) goto 1924;

/* Statement goto goto 79 */ 
1927:   if (true) goto 79; 

1928: if (true) goto 1925;
1924: nop;

1925: nop;

1929: end_atomic;

 /* flush_end */


/* Statement goto goto 11 */ 
1930:   if (true) goto 11; 

 /* flush_start */


1931: begin_atomic;

80: nop; 

1932: nop; 

/* Statement if (turn_cnt_p2 != 0) */ 

1936: if (*) goto 1934;
1933: assume(!((B5 != 0))); 

1937: nop; 

/* Statement if (*) */ 

1940: if (*) goto 1938;

1941: nop; 

/* Statement turn = turn_1_p2 */
1942:  load t16 = B16;

 /* update predicate - B14: (turn = 0) */
1943:   store B14 = choose((t16 != 0), (t16 == 0));


1944: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1945: nop; 

/* Statement turn_cnt_p2 = turn_cnt_p2 - 1 */
1946:  load t5 = B5;
1947:  load t6 = B6;

 /* update predicate - B5: (turn_cnt_p2 = 0) */
1948:   store B5 = choose((t6 != 0), (t5 != 0) || (t6 == 0));


 /* update predicate - B6: (turn_cnt_p2 = 1) */
1949:   store B6 = choose(false, (t5 != 0) || (t6 != 0));


1950: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1951: if (true) goto 1939;
1938: nop;

1939: nop;

1952: if (true) goto 1935;
1934: nop;
1953: assume(!((B5 == 0) || (B6 != 0))); 

1935: nop;

1954: nop; 

/* Statement if (*) */ 

1957: if (*) goto 1955;

/* Statement goto goto 80 */ 
1958:   if (true) goto 80; 

1959: if (true) goto 1956;
1955: nop;

1956: nop;

1960: end_atomic;

 /* flush_end */


1961: if (true) goto 1898;
1897: nop;
1962: assume(!((B10 != 0))); 

 /* flush_start */


1963: begin_atomic;

81: nop; 

1964: nop; 

/* Statement if (turn_cnt_p2 != 0) */ 

1968: if (*) goto 1966;
1965: assume(!((B5 != 0))); 

1969: nop; 

/* Statement if (*) */ 

1972: if (*) goto 1970;

1973: nop; 

/* Statement turn = turn_1_p2 */
1974:  load t16 = B16;

 /* update predicate - B14: (turn = 0) */
1975:   store B14 = choose((t16 != 0), (t16 == 0));


1976: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1977: nop; 

/* Statement turn_cnt_p2 = turn_cnt_p2 - 1 */
1978:  load t5 = B5;
1979:  load t6 = B6;

 /* update predicate - B5: (turn_cnt_p2 = 0) */
1980:   store B5 = choose((t6 != 0), (t5 != 0) || (t6 == 0));


 /* update predicate - B6: (turn_cnt_p2 = 1) */
1981:   store B6 = choose(false, (t5 != 0) || (t6 != 0));


1982: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

1983: if (true) goto 1971;
1970: nop;

1971: nop;

1984: if (true) goto 1967;
1966: nop;
1985: assume(!((B5 == 0) || (B6 != 0))); 

1967: nop;

1986: nop; 

/* Statement if (*) */ 

1989: if (*) goto 1987;

/* Statement goto goto 81 */ 
1990:   if (true) goto 81; 

1991: if (true) goto 1988;
1987: nop;

1988: nop;

1992: end_atomic;

 /* flush_end */


1898: nop;

 /* flush_start */


1993: begin_atomic;

82: nop; 

1994: nop; 

/* Statement if (turn_cnt_p2 != 0) */ 

1998: if (*) goto 1996;
1995: assume(!((B5 != 0))); 

1999: nop; 

/* Statement if (*) */ 

2002: if (*) goto 2000;

2003: nop; 

/* Statement turn = turn_1_p2 */
2004:  load t16 = B16;

 /* update predicate - B14: (turn = 0) */
2005:   store B14 = choose((t16 != 0), (t16 == 0));


2006: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2007: nop; 

/* Statement turn_cnt_p2 = turn_cnt_p2 - 1 */
2008:  load t5 = B5;
2009:  load t6 = B6;

 /* update predicate - B5: (turn_cnt_p2 = 0) */
2010:   store B5 = choose((t6 != 0), (t5 != 0) || (t6 == 0));


 /* update predicate - B6: (turn_cnt_p2 = 1) */
2011:   store B6 = choose(false, (t5 != 0) || (t6 != 0));


2012: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2013: if (true) goto 2001;
2000: nop;

2001: nop;

2014: if (true) goto 1997;
1996: nop;
2015: assume(!((B5 == 0) || (B6 != 0))); 

1997: nop;

2016: nop; 

/* Statement if (*) */ 

2019: if (*) goto 2017;

/* Statement goto goto 82 */ 
2020:   if (true) goto 82; 

2021: if (true) goto 2018;
2017: nop;

2018: nop;

2022: end_atomic;

 /* flush_end */


4: nop; 

/* Statement: load t2 = turn; */


2023: begin_atomic;

2024: nop; 

/* Statement if (turn_cnt_p2 = 0) */ 

2028: if (*) goto 2026;
2025: assume(!((B5 == 0) || (B6 != 0))); 

2029: nop; 

/* Statement t2 = turn */
2030:  load t14 = B14;

 /* update predicate - B7: (t2 = 0) */
2031:   store B7 = choose((t14 != 0), (t14 == 0));


2032: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2033: if (true) goto 2027;
2026: nop;
2034: assume(!((B5 != 0))); 

2027: nop;

2035: nop; 

/* Statement if (turn_cnt_p2 = 1) */ 

2039: if (*) goto 2037;
2036: assume(!((B5 != 0) || (B6 == 0))); 

2040: nop; 

/* Statement t2 = turn_1_p2 */
2041:  load t16 = B16;

 /* update predicate - B7: (t2 = 0) */
2042:   store B7 = choose((t16 != 0), (t16 == 0));


2043: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2044: if (true) goto 2038;
2037: nop;
2045: assume(!((B6 != 0))); 

2038: nop;

2046: end_atomic;

 /* flush_start */


2047: begin_atomic;

83: nop; 

2048: nop; 

/* Statement if (turn_cnt_p2 != 0) */ 

2052: if (*) goto 2050;
2049: assume(!((B5 != 0))); 

2053: nop; 

/* Statement if (*) */ 

2056: if (*) goto 2054;

2057: nop; 

/* Statement turn = turn_1_p2 */
2058:  load t16 = B16;

 /* update predicate - B14: (turn = 0) */
2059:   store B14 = choose((t16 != 0), (t16 == 0));


2060: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2061: nop; 

/* Statement turn_cnt_p2 = turn_cnt_p2 - 1 */
2062:  load t5 = B5;
2063:  load t6 = B6;

 /* update predicate - B5: (turn_cnt_p2 = 0) */
2064:   store B5 = choose((t6 != 0), (t5 != 0) || (t6 == 0));


 /* update predicate - B6: (turn_cnt_p2 = 1) */
2065:   store B6 = choose(false, (t5 != 0) || (t6 != 0));


2066: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2067: if (true) goto 2055;
2054: nop;

2055: nop;

2068: if (true) goto 2051;
2050: nop;
2069: assume(!((B5 == 0) || (B6 != 0))); 

2051: nop;

2070: nop; 

/* Statement if (*) */ 

2073: if (*) goto 2071;

/* Statement goto goto 83 */ 
2074:   if (true) goto 83; 

2075: if (true) goto 2072;
2071: nop;

2072: nop;

2076: end_atomic;

 /* flush_end */


5: nop; 

/* Statement if ((t2 != 0)) */ 

2080: if (*) goto 2078;
2077: assume(!((B7 != 0))); 

 /* flush_start */


2081: begin_atomic;

84: nop; 

2082: nop; 

/* Statement if (turn_cnt_p2 != 0) */ 

2086: if (*) goto 2084;
2083: assume(!((B5 != 0))); 

2087: nop; 

/* Statement if (*) */ 

2090: if (*) goto 2088;

2091: nop; 

/* Statement turn = turn_1_p2 */
2092:  load t16 = B16;

 /* update predicate - B14: (turn = 0) */
2093:   store B14 = choose((t16 != 0), (t16 == 0));


2094: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2095: nop; 

/* Statement turn_cnt_p2 = turn_cnt_p2 - 1 */
2096:  load t5 = B5;
2097:  load t6 = B6;

 /* update predicate - B5: (turn_cnt_p2 = 0) */
2098:   store B5 = choose((t6 != 0), (t5 != 0) || (t6 == 0));


 /* update predicate - B6: (turn_cnt_p2 = 1) */
2099:   store B6 = choose(false, (t5 != 0) || (t6 != 0));


2100: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2101: if (true) goto 2089;
2088: nop;

2089: nop;

2102: if (true) goto 2085;
2084: nop;
2103: assume(!((B5 == 0) || (B6 != 0))); 

2085: nop;

2104: nop; 

/* Statement if (*) */ 

2107: if (*) goto 2105;

/* Statement goto goto 84 */ 
2108:   if (true) goto 84; 

2109: if (true) goto 2106;
2105: nop;

2106: nop;

2110: end_atomic;

 /* flush_end */


/* Statement goto goto 2 */ 
2111:   if (true) goto 2; 

 /* flush_start */


2112: begin_atomic;

85: nop; 

2113: nop; 

/* Statement if (turn_cnt_p2 != 0) */ 

2117: if (*) goto 2115;
2114: assume(!((B5 != 0))); 

2118: nop; 

/* Statement if (*) */ 

2121: if (*) goto 2119;

2122: nop; 

/* Statement turn = turn_1_p2 */
2123:  load t16 = B16;

 /* update predicate - B14: (turn = 0) */
2124:   store B14 = choose((t16 != 0), (t16 == 0));


2125: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2126: nop; 

/* Statement turn_cnt_p2 = turn_cnt_p2 - 1 */
2127:  load t5 = B5;
2128:  load t6 = B6;

 /* update predicate - B5: (turn_cnt_p2 = 0) */
2129:   store B5 = choose((t6 != 0), (t5 != 0) || (t6 == 0));


 /* update predicate - B6: (turn_cnt_p2 = 1) */
2130:   store B6 = choose(false, (t5 != 0) || (t6 != 0));


2131: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2132: if (true) goto 2120;
2119: nop;

2120: nop;

2133: if (true) goto 2116;
2115: nop;
2134: assume(!((B5 == 0) || (B6 != 0))); 

2116: nop;

2135: nop; 

/* Statement if (*) */ 

2138: if (*) goto 2136;

/* Statement goto goto 85 */ 
2139:   if (true) goto 85; 

2140: if (true) goto 2137;
2136: nop;

2137: nop;

2141: end_atomic;

 /* flush_end */


2142: if (true) goto 2079;
2078: nop;
2143: assume(!((B7 == 0))); 

 /* flush_start */


2144: begin_atomic;

86: nop; 

2145: nop; 

/* Statement if (turn_cnt_p2 != 0) */ 

2149: if (*) goto 2147;
2146: assume(!((B5 != 0))); 

2150: nop; 

/* Statement if (*) */ 

2153: if (*) goto 2151;

2154: nop; 

/* Statement turn = turn_1_p2 */
2155:  load t16 = B16;

 /* update predicate - B14: (turn = 0) */
2156:   store B14 = choose((t16 != 0), (t16 == 0));


2157: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2158: nop; 

/* Statement turn_cnt_p2 = turn_cnt_p2 - 1 */
2159:  load t5 = B5;
2160:  load t6 = B6;

 /* update predicate - B5: (turn_cnt_p2 = 0) */
2161:   store B5 = choose((t6 != 0), (t5 != 0) || (t6 == 0));


 /* update predicate - B6: (turn_cnt_p2 = 1) */
2162:   store B6 = choose(false, (t5 != 0) || (t6 != 0));


2163: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2164: if (true) goto 2152;
2151: nop;

2152: nop;

2165: if (true) goto 2148;
2147: nop;
2166: assume(!((B5 == 0) || (B6 != 0))); 

2148: nop;

2167: nop; 

/* Statement if (*) */ 

2170: if (*) goto 2168;

/* Statement goto goto 86 */ 
2171:   if (true) goto 86; 

2172: if (true) goto 2169;
2168: nop;

2169: nop;

2173: end_atomic;

 /* flush_end */


2079: nop;

 /* flush_start */


2174: begin_atomic;

87: nop; 

2175: nop; 

/* Statement if (turn_cnt_p2 != 0) */ 

2179: if (*) goto 2177;
2176: assume(!((B5 != 0))); 

2180: nop; 

/* Statement if (*) */ 

2183: if (*) goto 2181;

2184: nop; 

/* Statement turn = turn_1_p2 */
2185:  load t16 = B16;

 /* update predicate - B14: (turn = 0) */
2186:   store B14 = choose((t16 != 0), (t16 == 0));


2187: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2188: nop; 

/* Statement turn_cnt_p2 = turn_cnt_p2 - 1 */
2189:  load t5 = B5;
2190:  load t6 = B6;

 /* update predicate - B5: (turn_cnt_p2 = 0) */
2191:   store B5 = choose((t6 != 0), (t5 != 0) || (t6 == 0));


 /* update predicate - B6: (turn_cnt_p2 = 1) */
2192:   store B6 = choose(false, (t5 != 0) || (t6 != 0));


2193: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2194: if (true) goto 2182;
2181: nop;

2182: nop;

2195: if (true) goto 2178;
2177: nop;
2196: assume(!((B5 == 0) || (B6 != 0))); 

2178: nop;

2197: nop; 

/* Statement if (*) */ 

2200: if (*) goto 2198;

/* Statement goto goto 87 */ 
2201:   if (true) goto 87; 

2202: if (true) goto 2199;
2198: nop;

2199: nop;

2203: end_atomic;

 /* flush_end */


6: nop; 

/* Statement flag1 = 0 */
2204: begin_atomic;

 /* update predicate - B13: (flag1 = 0) */
2205:   store B13 = choose(true, false);


2206: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2207: end_atomic;
 /* flush_start */


2208: begin_atomic;

88: nop; 

2209: nop; 

/* Statement if (turn_cnt_p2 != 0) */ 

2213: if (*) goto 2211;
2210: assume(!((B5 != 0))); 

2214: nop; 

/* Statement if (*) */ 

2217: if (*) goto 2215;

2218: nop; 

/* Statement turn = turn_1_p2 */
2219:  load t16 = B16;

 /* update predicate - B14: (turn = 0) */
2220:   store B14 = choose((t16 != 0), (t16 == 0));


2221: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2222: nop; 

/* Statement turn_cnt_p2 = turn_cnt_p2 - 1 */
2223:  load t5 = B5;
2224:  load t6 = B6;

 /* update predicate - B5: (turn_cnt_p2 = 0) */
2225:   store B5 = choose((t6 != 0), (t5 != 0) || (t6 == 0));


 /* update predicate - B6: (turn_cnt_p2 = 1) */
2226:   store B6 = choose(false, (t5 != 0) || (t6 != 0));


2227: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2228: if (true) goto 2216;
2215: nop;

2216: nop;

2229: if (true) goto 2212;
2211: nop;
2230: assume(!((B5 == 0) || (B6 != 0))); 

2212: nop;

2231: nop; 

/* Statement if (*) */ 

2234: if (*) goto 2232;

/* Statement goto goto 88 */ 
2235:   if (true) goto 88; 

2236: if (true) goto 2233;
2232: nop;

2233: nop;

2237: end_atomic;

 /* flush_end */


7: nop; 

/* Statement: load t2 = turn; */


2238: begin_atomic;

2239: nop; 

/* Statement if (turn_cnt_p2 = 0) */ 

2243: if (*) goto 2241;
2240: assume(!((B5 == 0) || (B6 != 0))); 

2244: nop; 

/* Statement t2 = turn */
2245:  load t14 = B14;

 /* update predicate - B7: (t2 = 0) */
2246:   store B7 = choose((t14 != 0), (t14 == 0));


2247: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2248: if (true) goto 2242;
2241: nop;
2249: assume(!((B5 != 0))); 

2242: nop;

2250: nop; 

/* Statement if (turn_cnt_p2 = 1) */ 

2254: if (*) goto 2252;
2251: assume(!((B5 != 0) || (B6 == 0))); 

2255: nop; 

/* Statement t2 = turn_1_p2 */
2256:  load t16 = B16;

 /* update predicate - B7: (t2 = 0) */
2257:   store B7 = choose((t16 != 0), (t16 == 0));


2258: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2259: if (true) goto 2253;
2252: nop;
2260: assume(!((B6 != 0))); 

2253: nop;

2261: end_atomic;

 /* flush_start */


2262: begin_atomic;

89: nop; 

2263: nop; 

/* Statement if (turn_cnt_p2 != 0) */ 

2267: if (*) goto 2265;
2264: assume(!((B5 != 0))); 

2268: nop; 

/* Statement if (*) */ 

2271: if (*) goto 2269;

2272: nop; 

/* Statement turn = turn_1_p2 */
2273:  load t16 = B16;

 /* update predicate - B14: (turn = 0) */
2274:   store B14 = choose((t16 != 0), (t16 == 0));


2275: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2276: nop; 

/* Statement turn_cnt_p2 = turn_cnt_p2 - 1 */
2277:  load t5 = B5;
2278:  load t6 = B6;

 /* update predicate - B5: (turn_cnt_p2 = 0) */
2279:   store B5 = choose((t6 != 0), (t5 != 0) || (t6 == 0));


 /* update predicate - B6: (turn_cnt_p2 = 1) */
2280:   store B6 = choose(false, (t5 != 0) || (t6 != 0));


2281: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2282: if (true) goto 2270;
2269: nop;

2270: nop;

2283: if (true) goto 2266;
2265: nop;
2284: assume(!((B5 == 0) || (B6 != 0))); 

2266: nop;

2285: nop; 

/* Statement if (*) */ 

2288: if (*) goto 2286;

/* Statement goto goto 89 */ 
2289:   if (true) goto 89; 

2290: if (true) goto 2287;
2286: nop;

2287: nop;

2291: end_atomic;

 /* flush_end */


8: nop; 

/* Statement if ((t2 = 0)) */ 

2295: if (*) goto 2293;
2292: assume(!((B7 == 0))); 

 /* flush_start */


2296: begin_atomic;

90: nop; 

2297: nop; 

/* Statement if (turn_cnt_p2 != 0) */ 

2301: if (*) goto 2299;
2298: assume(!((B5 != 0))); 

2302: nop; 

/* Statement if (*) */ 

2305: if (*) goto 2303;

2306: nop; 

/* Statement turn = turn_1_p2 */
2307:  load t16 = B16;

 /* update predicate - B14: (turn = 0) */
2308:   store B14 = choose((t16 != 0), (t16 == 0));


2309: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2310: nop; 

/* Statement turn_cnt_p2 = turn_cnt_p2 - 1 */
2311:  load t5 = B5;
2312:  load t6 = B6;

 /* update predicate - B5: (turn_cnt_p2 = 0) */
2313:   store B5 = choose((t6 != 0), (t5 != 0) || (t6 == 0));


 /* update predicate - B6: (turn_cnt_p2 = 1) */
2314:   store B6 = choose(false, (t5 != 0) || (t6 != 0));


2315: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2316: if (true) goto 2304;
2303: nop;

2304: nop;

2317: if (true) goto 2300;
2299: nop;
2318: assume(!((B5 == 0) || (B6 != 0))); 

2300: nop;

2319: nop; 

/* Statement if (*) */ 

2322: if (*) goto 2320;

/* Statement goto goto 90 */ 
2323:   if (true) goto 90; 

2324: if (true) goto 2321;
2320: nop;

2321: nop;

2325: end_atomic;

 /* flush_end */


/* Statement goto goto 7 */ 
2326:   if (true) goto 7; 

 /* flush_start */


2327: begin_atomic;

91: nop; 

2328: nop; 

/* Statement if (turn_cnt_p2 != 0) */ 

2332: if (*) goto 2330;
2329: assume(!((B5 != 0))); 

2333: nop; 

/* Statement if (*) */ 

2336: if (*) goto 2334;

2337: nop; 

/* Statement turn = turn_1_p2 */
2338:  load t16 = B16;

 /* update predicate - B14: (turn = 0) */
2339:   store B14 = choose((t16 != 0), (t16 == 0));


2340: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2341: nop; 

/* Statement turn_cnt_p2 = turn_cnt_p2 - 1 */
2342:  load t5 = B5;
2343:  load t6 = B6;

 /* update predicate - B5: (turn_cnt_p2 = 0) */
2344:   store B5 = choose((t6 != 0), (t5 != 0) || (t6 == 0));


 /* update predicate - B6: (turn_cnt_p2 = 1) */
2345:   store B6 = choose(false, (t5 != 0) || (t6 != 0));


2346: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2347: if (true) goto 2335;
2334: nop;

2335: nop;

2348: if (true) goto 2331;
2330: nop;
2349: assume(!((B5 == 0) || (B6 != 0))); 

2331: nop;

2350: nop; 

/* Statement if (*) */ 

2353: if (*) goto 2351;

/* Statement goto goto 91 */ 
2354:   if (true) goto 91; 

2355: if (true) goto 2352;
2351: nop;

2352: nop;

2356: end_atomic;

 /* flush_end */


2357: if (true) goto 2294;
2293: nop;
2358: assume(!((B7 != 0))); 

 /* flush_start */


2359: begin_atomic;

92: nop; 

2360: nop; 

/* Statement if (turn_cnt_p2 != 0) */ 

2364: if (*) goto 2362;
2361: assume(!((B5 != 0))); 

2365: nop; 

/* Statement if (*) */ 

2368: if (*) goto 2366;

2369: nop; 

/* Statement turn = turn_1_p2 */
2370:  load t16 = B16;

 /* update predicate - B14: (turn = 0) */
2371:   store B14 = choose((t16 != 0), (t16 == 0));


2372: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2373: nop; 

/* Statement turn_cnt_p2 = turn_cnt_p2 - 1 */
2374:  load t5 = B5;
2375:  load t6 = B6;

 /* update predicate - B5: (turn_cnt_p2 = 0) */
2376:   store B5 = choose((t6 != 0), (t5 != 0) || (t6 == 0));


 /* update predicate - B6: (turn_cnt_p2 = 1) */
2377:   store B6 = choose(false, (t5 != 0) || (t6 != 0));


2378: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2379: if (true) goto 2367;
2366: nop;

2367: nop;

2380: if (true) goto 2363;
2362: nop;
2381: assume(!((B5 == 0) || (B6 != 0))); 

2363: nop;

2382: nop; 

/* Statement if (*) */ 

2385: if (*) goto 2383;

/* Statement goto goto 92 */ 
2386:   if (true) goto 92; 

2387: if (true) goto 2384;
2383: nop;

2384: nop;

2388: end_atomic;

 /* flush_end */


2294: nop;

 /* flush_start */


2389: begin_atomic;

93: nop; 

2390: nop; 

/* Statement if (turn_cnt_p2 != 0) */ 

2394: if (*) goto 2392;
2391: assume(!((B5 != 0))); 

2395: nop; 

/* Statement if (*) */ 

2398: if (*) goto 2396;

2399: nop; 

/* Statement turn = turn_1_p2 */
2400:  load t16 = B16;

 /* update predicate - B14: (turn = 0) */
2401:   store B14 = choose((t16 != 0), (t16 == 0));


2402: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2403: nop; 

/* Statement turn_cnt_p2 = turn_cnt_p2 - 1 */
2404:  load t5 = B5;
2405:  load t6 = B6;

 /* update predicate - B5: (turn_cnt_p2 = 0) */
2406:   store B5 = choose((t6 != 0), (t5 != 0) || (t6 == 0));


 /* update predicate - B6: (turn_cnt_p2 = 1) */
2407:   store B6 = choose(false, (t5 != 0) || (t6 != 0));


2408: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2409: if (true) goto 2397;
2396: nop;

2397: nop;

2410: if (true) goto 2393;
2392: nop;
2411: assume(!((B5 == 0) || (B6 != 0))); 

2393: nop;

2412: nop; 

/* Statement if (*) */ 

2415: if (*) goto 2413;

/* Statement goto goto 93 */ 
2416:   if (true) goto 93; 

2417: if (true) goto 2414;
2413: nop;

2414: nop;

2418: end_atomic;

 /* flush_end */


9: nop; 

/* Statement flag1 = 1 */
2419: begin_atomic;

 /* update predicate - B13: (flag1 = 0) */
2420:   store B13 = choose(false, true);


2421: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2422: end_atomic;
 /* flush_start */


2423: begin_atomic;

94: nop; 

2424: nop; 

/* Statement if (turn_cnt_p2 != 0) */ 

2428: if (*) goto 2426;
2425: assume(!((B5 != 0))); 

2429: nop; 

/* Statement if (*) */ 

2432: if (*) goto 2430;

2433: nop; 

/* Statement turn = turn_1_p2 */
2434:  load t16 = B16;

 /* update predicate - B14: (turn = 0) */
2435:   store B14 = choose((t16 != 0), (t16 == 0));


2436: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2437: nop; 

/* Statement turn_cnt_p2 = turn_cnt_p2 - 1 */
2438:  load t5 = B5;
2439:  load t6 = B6;

 /* update predicate - B5: (turn_cnt_p2 = 0) */
2440:   store B5 = choose((t6 != 0), (t5 != 0) || (t6 == 0));


 /* update predicate - B6: (turn_cnt_p2 = 1) */
2441:   store B6 = choose(false, (t5 != 0) || (t6 != 0));


2442: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2443: if (true) goto 2431;
2430: nop;

2431: nop;

2444: if (true) goto 2427;
2426: nop;
2445: assume(!((B5 == 0) || (B6 != 0))); 

2427: nop;

2446: nop; 

/* Statement if (*) */ 

2449: if (*) goto 2447;

/* Statement goto goto 94 */ 
2450:   if (true) goto 94; 

2451: if (true) goto 2448;
2447: nop;

2448: nop;

2452: end_atomic;

 /* flush_end */


2453: begin_atomic;

/* Statement: fence_start; */


2454: nop; 

/* Statement if (turn_cnt_p2 = 1) */ 

2458: if (*) goto 2456;
2455: assume(!((B5 != 0) || (B6 == 0))); 

2459: nop; 

/* Statement turn = turn_1_p2 */
2460:  load t16 = B16;

 /* update predicate - B14: (turn = 0) */
2461:   store B14 = choose((t16 != 0), (t16 == 0));


2462: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2463: if (true) goto 2457;
2456: nop;
2464: assume(!((B6 != 0))); 

2457: nop;

2465: nop; 

/* Statement turn_cnt_p2 = 0 */

 /* update predicate - B5: (turn_cnt_p2 = 0) */
2466:   store B5 = choose(true, false);


 /* update predicate - B6: (turn_cnt_p2 = 1) */
2467:   store B6 = choose(false, true);


2468: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

/* fence_end */


2469: end_atomic;

/* Statement 10: goto goto 2 */ 
10:   if (true) goto 2; 

 /* flush_start */


2470: begin_atomic;

95: nop; 

2471: nop; 

/* Statement if (turn_cnt_p2 != 0) */ 

2475: if (*) goto 2473;
2472: assume(!((B5 != 0))); 

2476: nop; 

/* Statement if (*) */ 

2479: if (*) goto 2477;

2480: nop; 

/* Statement turn = turn_1_p2 */
2481:  load t16 = B16;

 /* update predicate - B14: (turn = 0) */
2482:   store B14 = choose((t16 != 0), (t16 == 0));


2483: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2484: nop; 

/* Statement turn_cnt_p2 = turn_cnt_p2 - 1 */
2485:  load t5 = B5;
2486:  load t6 = B6;

 /* update predicate - B5: (turn_cnt_p2 = 0) */
2487:   store B5 = choose((t6 != 0), (t5 != 0) || (t6 == 0));


 /* update predicate - B6: (turn_cnt_p2 = 1) */
2488:   store B6 = choose(false, (t5 != 0) || (t6 != 0));


2489: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2490: if (true) goto 2478;
2477: nop;

2478: nop;

2491: if (true) goto 2474;
2473: nop;
2492: assume(!((B5 == 0) || (B6 != 0))); 

2474: nop;

2493: nop; 

/* Statement if (*) */ 

2496: if (*) goto 2494;

/* Statement goto goto 95 */ 
2497:   if (true) goto 95; 

2498: if (true) goto 2495;
2494: nop;

2495: nop;

2499: end_atomic;

 /* flush_end */


11: nop; 

 /* flush_start */


2500: begin_atomic;

96: nop; 

2501: nop; 

/* Statement if (turn_cnt_p2 != 0) */ 

2505: if (*) goto 2503;
2502: assume(!((B5 != 0))); 

2506: nop; 

/* Statement if (*) */ 

2509: if (*) goto 2507;

2510: nop; 

/* Statement turn = turn_1_p2 */
2511:  load t16 = B16;

 /* update predicate - B14: (turn = 0) */
2512:   store B14 = choose((t16 != 0), (t16 == 0));


2513: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2514: nop; 

/* Statement turn_cnt_p2 = turn_cnt_p2 - 1 */
2515:  load t5 = B5;
2516:  load t6 = B6;

 /* update predicate - B5: (turn_cnt_p2 = 0) */
2517:   store B5 = choose((t6 != 0), (t5 != 0) || (t6 == 0));


 /* update predicate - B6: (turn_cnt_p2 = 1) */
2518:   store B6 = choose(false, (t5 != 0) || (t6 != 0));


2519: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2520: if (true) goto 2508;
2507: nop;

2508: nop;

2521: if (true) goto 2504;
2503: nop;
2522: assume(!((B5 == 0) || (B6 != 0))); 

2504: nop;

2523: nop; 

/* Statement if (*) */ 

2526: if (*) goto 2524;

/* Statement goto goto 96 */ 
2527:   if (true) goto 96; 

2528: if (true) goto 2525;
2524: nop;

2525: nop;

2529: end_atomic;

 /* flush_end */


12: begin_atomic;

/* Statement: store turn = 0; */


2530: nop; 

/* Statement if (turn_cnt_p2 = 1) */ 

2534: if (*) goto 2532;
2531: assume(!((B5 != 0) || (B6 == 0))); 

2535: nop; 

/* Statement overflow = 1 */

 /* update predicate - B0: (overflow = 0) */
2536:   store B0 = choose(false, true);


2537: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2538: if (true) goto 2533;
2532: nop;
2539: assume(!((B6 != 0))); 

2533: nop;

2540: nop; 

/* Statement turn_cnt_p2 = turn_cnt_p2 + 1 */
2541:  load t5 = B5;
2542:  load t6 = B6;

 /* update predicate - B5: (turn_cnt_p2 = 0) */
2543:   store B5 = choose(false, (t5 != 0) || (t6 != 0));


 /* update predicate - B6: (turn_cnt_p2 = 1) */
2544:   store B6 = choose((t5 != 0), (t5 == 0) || (t6 != 0));


2545: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2546: nop; 

/* Statement if (turn_cnt_p2 = 1) */ 

2550: if (*) goto 2548;
2547: assume(!((B5 != 0) || (B6 == 0))); 

2551: nop; 

/* Statement turn_1_p2 = 0 */

 /* update predicate - B16: (turn_1_p2 = 0) */
2552:   store B16 = choose(true, false);
2553: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2554: if (true) goto 2549;
2548: nop;
2555: assume(!((B6 != 0))); 

2549: nop;

2556: end_atomic;

 /* flush_start */


2557: begin_atomic;

97: nop; 

2558: nop; 

/* Statement if (turn_cnt_p2 != 0) */ 

2562: if (*) goto 2560;
2559: assume(!((B5 != 0))); 

2563: nop; 

/* Statement if (*) */ 

2566: if (*) goto 2564;

2567: nop; 

/* Statement turn = turn_1_p2 */
2568:  load t16 = B16;

 /* update predicate - B14: (turn = 0) */
2569:   store B14 = choose((t16 != 0), (t16 == 0));


2570: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2571: nop; 

/* Statement turn_cnt_p2 = turn_cnt_p2 - 1 */
2572:  load t5 = B5;
2573:  load t6 = B6;

 /* update predicate - B5: (turn_cnt_p2 = 0) */
2574:   store B5 = choose((t6 != 0), (t5 != 0) || (t6 == 0));


 /* update predicate - B6: (turn_cnt_p2 = 1) */
2575:   store B6 = choose(false, (t5 != 0) || (t6 != 0));


2576: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2577: if (true) goto 2565;
2564: nop;

2565: nop;

2578: if (true) goto 2561;
2560: nop;
2579: assume(!((B5 == 0) || (B6 != 0))); 

2561: nop;

2580: nop; 

/* Statement if (*) */ 

2583: if (*) goto 2581;

/* Statement goto goto 97 */ 
2584:   if (true) goto 97; 

2585: if (true) goto 2582;
2581: nop;

2582: nop;

2586: end_atomic;

 /* flush_end */


2587: begin_atomic;

/* Statement: fence_start; */


2588: nop; 

/* Statement if (turn_cnt_p2 = 1) */ 

2592: if (*) goto 2590;
2589: assume(!((B5 != 0) || (B6 == 0))); 

2593: nop; 

/* Statement turn = turn_1_p2 */
2594:  load t16 = B16;

 /* update predicate - B14: (turn = 0) */
2595:   store B14 = choose((t16 != 0), (t16 == 0));


2596: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2597: if (true) goto 2591;
2590: nop;
2598: assume(!((B6 != 0))); 

2591: nop;

2599: nop; 

/* Statement turn_cnt_p2 = 0 */

 /* update predicate - B5: (turn_cnt_p2 = 0) */
2600:   store B5 = choose(true, false);


 /* update predicate - B6: (turn_cnt_p2 = 1) */
2601:   store B6 = choose(false, true);


2602: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

/* fence_end */


2603: end_atomic;

13: nop; 

/* Statement flag1 = 0 */
2604: begin_atomic;

 /* update predicate - B13: (flag1 = 0) */
2605:   store B13 = choose(true, false);


2606: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2607: end_atomic;
 /* flush_start */


2608: begin_atomic;

98: nop; 

2609: nop; 

/* Statement if (turn_cnt_p2 != 0) */ 

2613: if (*) goto 2611;
2610: assume(!((B5 != 0))); 

2614: nop; 

/* Statement if (*) */ 

2617: if (*) goto 2615;

2618: nop; 

/* Statement turn = turn_1_p2 */
2619:  load t16 = B16;

 /* update predicate - B14: (turn = 0) */
2620:   store B14 = choose((t16 != 0), (t16 == 0));


2621: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2622: nop; 

/* Statement turn_cnt_p2 = turn_cnt_p2 - 1 */
2623:  load t5 = B5;
2624:  load t6 = B6;

 /* update predicate - B5: (turn_cnt_p2 = 0) */
2625:   store B5 = choose((t6 != 0), (t5 != 0) || (t6 == 0));


 /* update predicate - B6: (turn_cnt_p2 = 1) */
2626:   store B6 = choose(false, (t5 != 0) || (t6 != 0));


2627: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2628: if (true) goto 2616;
2615: nop;

2616: nop;

2629: if (true) goto 2612;
2611: nop;
2630: assume(!((B5 == 0) || (B6 != 0))); 

2612: nop;

2631: nop; 

/* Statement if (*) */ 

2634: if (*) goto 2632;

/* Statement goto goto 98 */ 
2635:   if (true) goto 98; 

2636: if (true) goto 2633;
2632: nop;

2633: nop;

2637: end_atomic;

 /* flush_end */


/* Statement goto goto 1 */ 
2638:   if (true) goto 1; 

 /* flush_start */


2639: begin_atomic;

99: nop; 

2640: nop; 

/* Statement if (turn_cnt_p2 != 0) */ 

2644: if (*) goto 2642;
2641: assume(!((B5 != 0))); 

2645: nop; 

/* Statement if (*) */ 

2648: if (*) goto 2646;

2649: nop; 

/* Statement turn = turn_1_p2 */
2650:  load t16 = B16;

 /* update predicate - B14: (turn = 0) */
2651:   store B14 = choose((t16 != 0), (t16 == 0));


2652: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2653: nop; 

/* Statement turn_cnt_p2 = turn_cnt_p2 - 1 */
2654:  load t5 = B5;
2655:  load t6 = B6;

 /* update predicate - B5: (turn_cnt_p2 = 0) */
2656:   store B5 = choose((t6 != 0), (t5 != 0) || (t6 == 0));


 /* update predicate - B6: (turn_cnt_p2 = 1) */
2657:   store B6 = choose(false, (t5 != 0) || (t6 != 0));


2658: assume(!((B1 != 0 && B2 != 0) || (B3 != 0 && B4 != 0) || (B5 != 0 && B6 != 0))); 

2659: if (true) goto 2647;
2646: nop;

2647: nop;

2660: if (true) goto 2643;
2642: nop;
2661: assume(!((B5 == 0) || (B6 != 0))); 

2643: nop;

2662: nop; 

/* Statement if (*) */ 

2665: if (*) goto 2663;

/* Statement goto goto 99 */ 
2666:   if (true) goto 99; 

2667: if (true) goto 2664;
2663: nop;

2664: nop;

2668: end_atomic;

 /* flush_end */


/* program counters: ((pc{1} != 11) || (pc{2} != 11)) */


assert always (  ((pc{1} != 11) || (pc{2} != 11)) ) && (B0 == 1);
