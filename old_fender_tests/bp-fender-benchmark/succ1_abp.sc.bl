shared B0, B1, B2, B3, B4, B5, B6, B7;
local t0, t1, t2, t3, t4, t5, t6, t7, ifvar9, ifvar10, ifvar22;

init
3: store B0 = *;
4: store B1 = *;
5: store B2 = *;
6: store B3 = *;
7: store B4 = *;
8: store B5 = *;
9: store B6 = *;
10: store B7 = *;

11: load t0 = B0;
12: load t1 = B1;
13: load t2 = B2;
14: load t3 = B3;
15: load t4 = B4;
16: load t5 = B5;
17: load t6 = B6;
18: load t7 = B7;

19: assume(!((B6 != 0 && B7 != 0))); 

20: nop; 

/* Statement msg = 0 */
21:  load t0 = B0;
22:  load t1 = B1;
23:  load t2 = B2;
24:  load t3 = B3;
25:  load t4 = B4;
26:  load t5 = B5;
27:  load t6 = B6;
28:  load t7 = B7;

 /* update predicate - B0: (msg = 0) */
29:   store B0 = choose(true, false);


30: assume(!((B6 != 0 && B7 != 0))); 

31: nop; 

/* Statement ack = 0 */
32:  load t0 = B0;
33:  load t1 = B1;
34:  load t2 = B2;
35:  load t3 = B3;
36:  load t4 = B4;
37:  load t5 = B5;
38:  load t6 = B6;
39:  load t7 = B7;

 /* update predicate - B1: (ack = 0) */
40:   store B1 = choose(true, false);


41: assume(!((B6 != 0 && B7 != 0))); 

42: nop; 

/* Statement lSCnt = lRCnt */
43:  load t0 = B0;
44:  load t1 = B1;
45:  load t2 = B2;
46:  load t3 = B3;
47:  load t4 = B4;
48:  load t5 = B5;
49:  load t6 = B6;
50:  load t7 = B7;

 /* update predicate - B6: (lRCnt = lSCnt) */
51:   store B6 = choose(true, false);


 /* update predicate - B7: ((lRCnt + 1) = lSCnt) */
52:   store B7 = choose(false, true);
53: assume(!((B6 != 0 && B7 != 0))); 

54: nop; 

/* Statement lSSt = 0 */
55:  load t0 = B0;
56:  load t1 = B1;
57:  load t2 = B2;
58:  load t3 = B3;
59:  load t4 = B4;
60:  load t5 = B5;
61:  load t6 = B6;
62:  load t7 = B7;

 /* update predicate - B2: (lSSt = 0) */
63:   store B2 = choose(true, false);


64: assume(!((B6 != 0 && B7 != 0))); 

65: nop; 

/* Statement lRSt = 0 */
66:  load t0 = B0;
67:  load t1 = B1;
68:  load t2 = B2;
69:  load t3 = B3;
70:  load t4 = B4;
71:  load t5 = B5;
72:  load t6 = B6;
73:  load t7 = B7;

 /* update predicate - B5: (lRSt = 0) */
74:   store B5 = choose(true, false);


75: assume(!((B6 != 0 && B7 != 0))); 

/* Reset local variables */ 
76: t0 = 0; 
77: t1 = 0; 
78: t2 = 0; 
79: t3 = 0; 
80: t4 = 0; 
81: t5 = 0; 
82: t6 = 0; 
83: t7 = 0; 
84: ifvar9 = 0; 
85: ifvar10 = 0; 
86: ifvar22 = 0; 


process 1
1: nop; 

/* Statement lAck = ack */
87: begin_atomic;
88:  load t0 = B0;
89:  load t1 = B1;
90:  load t2 = B2;
91:  load t3 = B3;
92:  load t4 = B4;
93:  load t5 = B5;
94:  load t6 = B6;
95:  load t7 = B7;

 /* update predicate - B3: (lAck = 0) */
96:   store B3 = choose((t1 != 0), (t1 == 0));


97: assume(!((B6 != 0 && B7 != 0))); 

98: end_atomic;
99: nop; 

/* Statement if (((lAck = 0) & (lSSt = 0)) | ((lAck != 0) & (lSSt != 0))) */ 
103: begin_atomic;
104: ifvar9 = 0;

105: if (*) goto 100;
106: if (true) goto 101;
100: assume(!((B2 != 0 && B3 == 0) || (B2 == 0 && B3 != 0))); 
107: ifvar9 = 1;108: end_atomic;

109: nop; 

/* Statement if (lSSt != 0) */ 
113: begin_atomic;
114: ifvar10 = 0;

115: if (*) goto 110;
116: if (true) goto 111;
110: assume(!((B2 != 0))); 
117: ifvar10 = 1;118: end_atomic;

119: nop; 

/* Statement lSSt = 0 */
120: begin_atomic;
121:  load t0 = B0;
122:  load t1 = B1;
123:  load t2 = B2;
124:  load t3 = B3;
125:  load t4 = B4;
126:  load t5 = B5;
127:  load t6 = B6;
128:  load t7 = B7;

 /* update predicate - B2: (lSSt = 0) */
129:   store B2 = choose(true, false);


130: assume(!((B6 != 0 && B7 != 0))); 

131: end_atomic;
133: begin_atomic;
111:  if (ifvar10 == 0) goto 132; 
134: if (true) goto 112;
132: assume(!((B2 == 0))); 135: end_atomic;

136: nop; 

/* Statement lSSt = 1 */
137: begin_atomic;
138:  load t0 = B0;
139:  load t1 = B1;
140:  load t2 = B2;
141:  load t3 = B3;
142:  load t4 = B4;
143:  load t5 = B5;
144:  load t6 = B6;
145:  load t7 = B7;

 /* update predicate - B2: (lSSt = 0) */
146:   store B2 = choose(false, true);


147: assume(!((B6 != 0 && B7 != 0))); 

148: end_atomic;
112: nop;

149: nop; 

/* Statement lSCnt = lSCnt + 1 */
150: begin_atomic;
151:  load t0 = B0;
152:  load t1 = B1;
153:  load t2 = B2;
154:  load t3 = B3;
155:  load t4 = B4;
156:  load t5 = B5;
157:  load t6 = B6;
158:  load t7 = B7;

 /* update predicate - B6: (lRCnt = lSCnt) */
159:   store B6 = choose(false, (t6 != 0) || (t7 != 0));


 /* update predicate - B7: ((lRCnt + 1) = lSCnt) */
160:   store B7 = choose((t6 != 0), (t6 == 0) || (t7 != 0));
161: assume(!((B6 != 0 && B7 != 0))); 

162: end_atomic;
163: nop; 

/* Statement msg = lSSt */
164: begin_atomic;
165:  load t0 = B0;
166:  load t1 = B1;
167:  load t2 = B2;
168:  load t3 = B3;
169:  load t4 = B4;
170:  load t5 = B5;
171:  load t6 = B6;
172:  load t7 = B7;

 /* update predicate - B0: (msg = 0) */
173:   store B0 = choose((t2 != 0), (t2 == 0));


174: assume(!((B6 != 0 && B7 != 0))); 

175: end_atomic;
177: begin_atomic;
101:  if (ifvar9 == 0) goto 176; 
178: if (true) goto 102;
176: assume(!((B2 != 0 && B3 != 0) || (B2 == 0 && B3 == 0))); 179: end_atomic;

102: nop;

/* Statement goto goto 1 */ 
180:   if (true) goto 1; 


process 2
1: nop; 

/* Statement lMsg = msg */
181: begin_atomic;
182:  load t0 = B0;
183:  load t1 = B1;
184:  load t2 = B2;
185:  load t3 = B3;
186:  load t4 = B4;
187:  load t5 = B5;
188:  load t6 = B6;
189:  load t7 = B7;

 /* update predicate - B4: (lMsg = 0) */
190:   store B4 = choose((t0 != 0), (t0 == 0));


191: assume(!((B6 != 0 && B7 != 0))); 

192: end_atomic;
193: nop; 

/* Statement if (((lMsg = 0) & (lRSt != 0)) | ((lMsg = 0) & (lRSt != 0))) */ 
197: begin_atomic;
198: ifvar22 = 0;

199: if (*) goto 194;
200: if (true) goto 195;
194: assume(!((B4 == 0) || (B5 != 0))); 
201: ifvar22 = 1;202: end_atomic;

203: nop; 

/* Statement lRSt = lMsg */
204: begin_atomic;
205:  load t0 = B0;
206:  load t1 = B1;
207:  load t2 = B2;
208:  load t3 = B3;
209:  load t4 = B4;
210:  load t5 = B5;
211:  load t6 = B6;
212:  load t7 = B7;

 /* update predicate - B5: (lRSt = 0) */
213:   store B5 = choose((t4 != 0), (t4 == 0));


214: assume(!((B6 != 0 && B7 != 0))); 

215: end_atomic;
216: nop; 

/* Statement lRCnt = lRCnt + 1 */
217: begin_atomic;
218:  load t0 = B0;
219:  load t1 = B1;
220:  load t2 = B2;
221:  load t3 = B3;
222:  load t4 = B4;
223:  load t5 = B5;
224:  load t6 = B6;
225:  load t7 = B7;

 /* update predicate - B6: (lRCnt = lSCnt) */
226:   store B6 = choose((t7 != 0), (t6 != 0) || (t7 == 0));


 /* update predicate - B7: ((lRCnt + 1) = lSCnt) */
227:   store B7 = choose(false, (t6 != 0) || (t7 != 0));
228: assume(!((B6 != 0 && B7 != 0))); 

229: end_atomic;
230: nop; 

/* Statement ack = lRSt */
231: begin_atomic;
232:  load t0 = B0;
233:  load t1 = B1;
234:  load t2 = B2;
235:  load t3 = B3;
236:  load t4 = B4;
237:  load t5 = B5;
238:  load t6 = B6;
239:  load t7 = B7;

 /* update predicate - B1: (ack = 0) */
240:   store B1 = choose((t5 != 0), (t5 == 0));


241: assume(!((B6 != 0 && B7 != 0))); 

242: end_atomic;
244: begin_atomic;
195:  if (ifvar22 == 0) goto 243; 
245: if (true) goto 196;
243: assume(!((B4 != 0 && B5 == 0))); 246: end_atomic;

196: nop;

/* Statement goto goto 1 */ 
247:   if (true) goto 1; 

assert always (B6 != 0) || (B7 != 0); 

