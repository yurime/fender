shared B0, B1, B2, B3, B4, B5, B6;
local t0, t1, t2, t3, t4, t5, t6, ifvar8, ifvar13, ifvar19, ifvar32, ifvar37, ifvar43;

init
51: store B0 = *;
52: store B1 = *;
53: store B2 = *;
54: store B3 = *;
55: store B4 = *;
56: store B5 = *;
57: store B6 = *;

58: load t0 = B0;
59: load t1 = B1;
60: load t2 = B2;
61: load t3 = B3;
62: load t4 = B4;
63: load t5 = B5;
64: load t6 = B6;

65: assume(!(false)); 

66: nop; 

/* Statement turn = 0 */
67:  load t0 = B0;
68:  load t1 = B1;
69:  load t2 = B2;
70:  load t3 = B3;
71:  load t4 = B4;
72:  load t5 = B5;
73:  load t6 = B6;

 /* update predicate - B6: (turn = 0) */
74:   store B6 = choose(true, false);
75: assume(!(false)); 

76: nop; 

/* Statement flag0 = 0 */
77:  load t0 = B0;
78:  load t1 = B1;
79:  load t2 = B2;
80:  load t3 = B3;
81:  load t4 = B4;
82:  load t5 = B5;
83:  load t6 = B6;

 /* update predicate - B4: (flag0 = 0) */
84:   store B4 = choose(true, false);


85: assume(!(false)); 

86: nop; 

/* Statement flag1 = 0 */
87:  load t0 = B0;
88:  load t1 = B1;
89:  load t2 = B2;
90:  load t3 = B3;
91:  load t4 = B4;
92:  load t5 = B5;
93:  load t6 = B6;

 /* update predicate - B5: (flag1 = 0) */
94:   store B5 = choose(true, false);


95: assume(!(false)); 

/* Reset local variables */ 
96: t0 = 0; 
97: t1 = 0; 
98: t2 = 0; 
99: t3 = 0; 
100: t4 = 0; 
101: t5 = 0; 
102: t6 = 0; 
103: ifvar8 = 0; 
104: ifvar13 = 0; 
105: ifvar19 = 0; 
106: ifvar32 = 0; 
107: ifvar37 = 0; 
108: ifvar43 = 0; 


process 1
1: nop; 

/* Statement flag0 = 1 */
109: begin_atomic;
110:  load t0 = B0;
111:  load t1 = B1;
112:  load t2 = B2;
113:  load t3 = B3;
114:  load t4 = B4;
115:  load t5 = B5;
116:  load t6 = B6;

 /* update predicate - B4: (flag0 = 0) */
117:   store B4 = choose(false, true);


118: assume(!(false)); 

119: end_atomic;
2: nop; 

/* Statement f1 = flag1 */
120: begin_atomic;
121:  load t0 = B0;
122:  load t1 = B1;
123:  load t2 = B2;
124:  load t3 = B3;
125:  load t4 = B4;
126:  load t5 = B5;
127:  load t6 = B6;

 /* update predicate - B2: (f1 = 0) */
128:   store B2 = choose((t5 != 0), (t5 == 0));


129: assume(!(false)); 

130: end_atomic;
3: nop; 

/* Statement if (f1 = 0) */ 
134: begin_atomic;
135: ifvar8 = 0;

136: if (*) goto 131;
137: if (true) goto 132;
131: assume(!((B2 == 0))); 
138: ifvar8 = 1;139: end_atomic;

/* Statement goto goto 11 */ 
140:   if (true) goto 11; 

142: begin_atomic;
132:  if (ifvar8 == 0) goto 141; 
143: if (true) goto 133;
141: assume(!((B2 != 0))); 144: end_atomic;

133: nop;

145: nop; 

/* Statement t1 = turn */
146: begin_atomic;
147:  load t0 = B0;
148:  load t1 = B1;
149:  load t2 = B2;
150:  load t3 = B3;
151:  load t4 = B4;
152:  load t5 = B5;
153:  load t6 = B6;

 /* update predicate - B1: (t1 = 0) */
154:   store B1 = choose((t6 != 0), (t6 == 0));


155: assume(!(false)); 

156: end_atomic;
5: nop; 

/* Statement if (t1 = 0) */ 
160: begin_atomic;
161: ifvar13 = 0;

162: if (*) goto 157;
163: if (true) goto 158;
157: assume(!((B1 == 0))); 
164: ifvar13 = 1;165: end_atomic;

/* Statement goto goto 2 */ 
166:   if (true) goto 2; 

168: begin_atomic;
158:  if (ifvar13 == 0) goto 167; 
169: if (true) goto 159;
167: assume(!((B1 != 0))); 170: end_atomic;

159: nop;

6: nop; 

/* Statement flag0 = 0 */
171: begin_atomic;
172:  load t0 = B0;
173:  load t1 = B1;
174:  load t2 = B2;
175:  load t3 = B3;
176:  load t4 = B4;
177:  load t5 = B5;
178:  load t6 = B6;

 /* update predicate - B4: (flag0 = 0) */
179:   store B4 = choose(true, false);


180: assume(!(false)); 

181: end_atomic;
7: nop; 

/* Statement t1 = turn */
182: begin_atomic;
183:  load t0 = B0;
184:  load t1 = B1;
185:  load t2 = B2;
186:  load t3 = B3;
187:  load t4 = B4;
188:  load t5 = B5;
189:  load t6 = B6;

 /* update predicate - B1: (t1 = 0) */
190:   store B1 = choose((t6 != 0), (t6 == 0));


191: assume(!(false)); 

192: end_atomic;
8: nop; 

/* Statement if (t != 0) */ 
196: begin_atomic;
197: ifvar19 = 0;

198: if (*) goto 193;
199: if (true) goto 194;
193: assume(!(false)); 
200: ifvar19 = 1;201: end_atomic;

/* Statement goto goto 7 */ 
202:   if (true) goto 7; 

204: begin_atomic;
194:  if (ifvar19 == 0) goto 203; 
205: if (true) goto 195;
203: assume(!(false)); 206: end_atomic;

195: nop;

9: nop; 

/* Statement flag0 = 1 */
207: begin_atomic;
208:  load t0 = B0;
209:  load t1 = B1;
210:  load t2 = B2;
211:  load t3 = B3;
212:  load t4 = B4;
213:  load t5 = B5;
214:  load t6 = B6;

 /* update predicate - B4: (flag0 = 0) */
215:   store B4 = choose(false, true);


216: assume(!(false)); 

217: end_atomic;
/* Statement 10: goto goto 2 */ 
10:   if (true) goto 2; 

11: nop; 

12: nop; 

/* Statement turn = 1 */
218: begin_atomic;
219:  load t0 = B0;
220:  load t1 = B1;
221:  load t2 = B2;
222:  load t3 = B3;
223:  load t4 = B4;
224:  load t5 = B5;
225:  load t6 = B6;

 /* update predicate - B6: (turn = 0) */
226:   store B6 = choose(false, true);
227: assume(!(false)); 

228: end_atomic;
13: nop; 

/* Statement flag0 = 0 */
229: begin_atomic;
230:  load t0 = B0;
231:  load t1 = B1;
232:  load t2 = B2;
233:  load t3 = B3;
234:  load t4 = B4;
235:  load t5 = B5;
236:  load t6 = B6;

 /* update predicate - B4: (flag0 = 0) */
237:   store B4 = choose(true, false);


238: assume(!(false)); 

239: end_atomic;

process 2
240: nop; 

1: nop; 

/* Statement flag1 = 1 */
241: begin_atomic;
242:  load t0 = B0;
243:  load t1 = B1;
244:  load t2 = B2;
245:  load t3 = B3;
246:  load t4 = B4;
247:  load t5 = B5;
248:  load t6 = B6;

 /* update predicate - B5: (flag1 = 0) */
249:   store B5 = choose(false, true);


250: assume(!(false)); 

251: end_atomic;
2: nop; 

/* Statement f2 = flag0 */
252: begin_atomic;
253:  load t0 = B0;
254:  load t1 = B1;
255:  load t2 = B2;
256:  load t3 = B3;
257:  load t4 = B4;
258:  load t5 = B5;
259:  load t6 = B6;

 /* update predicate - B3: (f2 = 0) */
260:   store B3 = choose((t4 != 0), (t4 == 0));


261: assume(!(false)); 

262: end_atomic;
3: nop; 

/* Statement if (f2 = 0) */ 
266: begin_atomic;
267: ifvar32 = 0;

268: if (*) goto 263;
269: if (true) goto 264;
263: assume(!((B3 == 0))); 
270: ifvar32 = 1;271: end_atomic;

/* Statement goto goto 11 */ 
272:   if (true) goto 11; 

274: begin_atomic;
264:  if (ifvar32 == 0) goto 273; 
275: if (true) goto 265;
273: assume(!((B3 != 0))); 276: end_atomic;

265: nop;

4: nop; 

/* Statement t2 = turn */
277: begin_atomic;
278:  load t0 = B0;
279:  load t1 = B1;
280:  load t2 = B2;
281:  load t3 = B3;
282:  load t4 = B4;
283:  load t5 = B5;
284:  load t6 = B6;

 /* update predicate - B0: (t2 = 0) */
285:   store B0 = choose((t6 != 0), (t6 == 0));


286: assume(!(false)); 

287: end_atomic;
5: nop; 

/* Statement if (t2 != 0) */ 
291: begin_atomic;
292: ifvar37 = 0;

293: if (*) goto 288;
294: if (true) goto 289;
288: assume(!((B0 != 0))); 
295: ifvar37 = 1;296: end_atomic;

/* Statement goto goto 2 */ 
297:   if (true) goto 2; 

299: begin_atomic;
289:  if (ifvar37 == 0) goto 298; 
300: if (true) goto 290;
298: assume(!((B0 == 0))); 301: end_atomic;

290: nop;

6: nop; 

/* Statement flag1 = 0 */
302: begin_atomic;
303:  load t0 = B0;
304:  load t1 = B1;
305:  load t2 = B2;
306:  load t3 = B3;
307:  load t4 = B4;
308:  load t5 = B5;
309:  load t6 = B6;

 /* update predicate - B5: (flag1 = 0) */
310:   store B5 = choose(true, false);


311: assume(!(false)); 

312: end_atomic;
7: nop; 

/* Statement t2 = turn */
313: begin_atomic;
314:  load t0 = B0;
315:  load t1 = B1;
316:  load t2 = B2;
317:  load t3 = B3;
318:  load t4 = B4;
319:  load t5 = B5;
320:  load t6 = B6;

 /* update predicate - B0: (t2 = 0) */
321:   store B0 = choose((t6 != 0), (t6 == 0));


322: assume(!(false)); 

323: end_atomic;
8: nop; 

/* Statement if (t2 = 0) */ 
327: begin_atomic;
328: ifvar43 = 0;

329: if (*) goto 324;
330: if (true) goto 325;
324: assume(!((B0 == 0))); 
331: ifvar43 = 1;332: end_atomic;

/* Statement goto goto 7 */ 
333:   if (true) goto 7; 

335: begin_atomic;
325:  if (ifvar43 == 0) goto 334; 
336: if (true) goto 326;
334: assume(!((B0 != 0))); 337: end_atomic;

326: nop;

9: nop; 

/* Statement flag1 = 1 */
338: begin_atomic;
339:  load t0 = B0;
340:  load t1 = B1;
341:  load t2 = B2;
342:  load t3 = B3;
343:  load t4 = B4;
344:  load t5 = B5;
345:  load t6 = B6;

 /* update predicate - B5: (flag1 = 0) */
346:   store B5 = choose(false, true);


347: assume(!(false)); 

348: end_atomic;
/* Statement 10: goto goto 2 */ 
10:   if (true) goto 2; 

11: nop; 

12: nop; 

/* Statement turn = 0 */
349: begin_atomic;
350:  load t0 = B0;
351:  load t1 = B1;
352:  load t2 = B2;
353:  load t3 = B3;
354:  load t4 = B4;
355:  load t5 = B5;
356:  load t6 = B6;

 /* update predicate - B6: (turn = 0) */
357:   store B6 = choose(true, false);
358: assume(!(false)); 

359: end_atomic;
13: nop; 

/* Statement flag1 = 0 */
360: begin_atomic;
361:  load t0 = B0;
362:  load t1 = B1;
363:  load t2 = B2;
364:  load t3 = B3;
365:  load t4 = B4;
366:  load t5 = B5;
367:  load t6 = B6;

 /* update predicate - B5: (flag1 = 0) */
368:   store B5 = choose(true, false);


369: assume(!(false)); 

370: end_atomic;
assert always ((pc{1} != 11) || (pc{2} != 11));

