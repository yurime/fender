shared B0, B1, B2, B3, B4, B5, B6;
local t0, t1, t2, t3, t4, t5, t6, ifvar10, ifvar21;

init
9: store B0 = *;
10: store B1 = *;
11: store B2 = *;
12: store B3 = *;
13: store B4 = *;
14: store B5 = *;
15: store B6 = *;

16: load t0 = B0;
17: load t1 = B1;
18: load t2 = B2;
19: load t3 = B3;
20: load t4 = B4;
21: load t5 = B5;
22: load t6 = B6;

23: assume(!(false)); 

24: nop; 

/* Statement turn = 0 */
25:  load t0 = B0;
26:  load t1 = B1;
27:  load t2 = B2;
28:  load t3 = B3;
29:  load t4 = B4;
30:  load t5 = B5;
31:  load t6 = B6;

 /* update predicate - B6: (turn = 0) */
32:   store B6 = choose(true, false);
33: assume(!(false)); 

34: nop; 

/* Statement flag0 = 0 */
35:  load t0 = B0;
36:  load t1 = B1;
37:  load t2 = B2;
38:  load t3 = B3;
39:  load t4 = B4;
40:  load t5 = B5;
41:  load t6 = B6;

 /* update predicate - B4: (flag0 = 0) */
42:   store B4 = choose(true, false);


43: assume(!(false)); 

44: nop; 

/* Statement flag1 = 0 */
45:  load t0 = B0;
46:  load t1 = B1;
47:  load t2 = B2;
48:  load t3 = B3;
49:  load t4 = B4;
50:  load t5 = B5;
51:  load t6 = B6;

 /* update predicate - B5: (flag1 = 0) */
52:   store B5 = choose(true, false);


53: assume(!(false)); 

/* Reset local variables */ 
54: t0 = 0; 
55: t1 = 0; 
56: t2 = 0; 
57: t3 = 0; 
58: t4 = 0; 
59: t5 = 0; 
60: t6 = 0; 
61: ifvar10 = 0; 
62: ifvar21 = 0; 


process 1
1: nop; 

/* Statement flag0 = 1 */
63: begin_atomic;
64:  load t0 = B0;
65:  load t1 = B1;
66:  load t2 = B2;
67:  load t3 = B3;
68:  load t4 = B4;
69:  load t5 = B5;
70:  load t6 = B6;

 /* update predicate - B4: (flag0 = 0) */
71:   store B4 = choose(false, true);


72: assume(!(false)); 

73: end_atomic;
2: nop; 

/* Statement turn = 1 */
74: begin_atomic;
75:  load t0 = B0;
76:  load t1 = B1;
77:  load t2 = B2;
78:  load t3 = B3;
79:  load t4 = B4;
80:  load t5 = B5;
81:  load t6 = B6;

 /* update predicate - B6: (turn = 0) */
82:   store B6 = choose(false, true);
83: assume(!(false)); 

84: end_atomic;
3: nop; 

/* Statement f1 = flag1 */
85: begin_atomic;
86:  load t0 = B0;
87:  load t1 = B1;
88:  load t2 = B2;
89:  load t3 = B3;
90:  load t4 = B4;
91:  load t5 = B5;
92:  load t6 = B6;

 /* update predicate - B0: (f1 = 0) */
93:   store B0 = choose((t5 != 0), (t5 == 0));


94: assume(!(false)); 

95: end_atomic;
4: nop; 

/* Statement t1 = turn */
96: begin_atomic;
97:  load t0 = B0;
98:  load t1 = B1;
99:  load t2 = B2;
100:  load t3 = B3;
101:  load t4 = B4;
102:  load t5 = B5;
103:  load t6 = B6;

 /* update predicate - B1: (t1 = 0) */
104:   store B1 = choose((t6 != 0), (t6 == 0));


105: assume(!(false)); 

106: end_atomic;
5: nop; 

/* Statement if ((t1 != 0) & (f1 != 0)) */ 
110: begin_atomic;
111: ifvar10 = 0;

112: if (*) goto 107;
113: if (true) goto 108;
107: assume(!((B0 != 0) || (B1 != 0))); 
114: ifvar10 = 1;115: end_atomic;

/* Statement goto goto 3 */ 
116:   if (true) goto 3; 

118: begin_atomic;
108:  if (ifvar10 == 0) goto 117; 
119: if (true) goto 109;
117: assume(!((B0 == 0 && B1 == 0))); 120: end_atomic;

109: nop;

6: nop; 

7: nop; 

/* Statement flag0 = 0 */
121: begin_atomic;
122:  load t0 = B0;
123:  load t1 = B1;
124:  load t2 = B2;
125:  load t3 = B3;
126:  load t4 = B4;
127:  load t5 = B5;
128:  load t6 = B6;

 /* update predicate - B4: (flag0 = 0) */
129:   store B4 = choose(true, false);


130: assume(!(false)); 

131: end_atomic;

process 2
1: nop; 

/* Statement flag1 = 1 */
132: begin_atomic;
133:  load t0 = B0;
134:  load t1 = B1;
135:  load t2 = B2;
136:  load t3 = B3;
137:  load t4 = B4;
138:  load t5 = B5;
139:  load t6 = B6;

 /* update predicate - B5: (flag1 = 0) */
140:   store B5 = choose(false, true);


141: assume(!(false)); 

142: end_atomic;
2: nop; 

/* Statement turn = 0 */
143: begin_atomic;
144:  load t0 = B0;
145:  load t1 = B1;
146:  load t2 = B2;
147:  load t3 = B3;
148:  load t4 = B4;
149:  load t5 = B5;
150:  load t6 = B6;

 /* update predicate - B6: (turn = 0) */
151:   store B6 = choose(true, false);
152: assume(!(false)); 

153: end_atomic;
3: nop; 

/* Statement f2 = flag0 */
154: begin_atomic;
155:  load t0 = B0;
156:  load t1 = B1;
157:  load t2 = B2;
158:  load t3 = B3;
159:  load t4 = B4;
160:  load t5 = B5;
161:  load t6 = B6;

 /* update predicate - B2: (f2 = 0) */
162:   store B2 = choose((t4 != 0), (t4 == 0));


163: assume(!(false)); 

164: end_atomic;
4: nop; 

/* Statement t2 = turn */
165: begin_atomic;
166:  load t0 = B0;
167:  load t1 = B1;
168:  load t2 = B2;
169:  load t3 = B3;
170:  load t4 = B4;
171:  load t5 = B5;
172:  load t6 = B6;

 /* update predicate - B3: (t2 = 0) */
173:   store B3 = choose((t6 != 0), (t6 == 0));


174: assume(!(false)); 

175: end_atomic;
5: nop; 

/* Statement if ((f2 != 0) & (t2 = 0)) */ 
179: begin_atomic;
180: ifvar21 = 0;

181: if (*) goto 176;
182: if (true) goto 177;
176: assume(!((B2 != 0) || (B3 == 0))); 
183: ifvar21 = 1;184: end_atomic;

/* Statement goto goto 3 */ 
185:   if (true) goto 3; 

187: begin_atomic;
177:  if (ifvar21 == 0) goto 186; 
188: if (true) goto 178;
186: assume(!((B2 == 0 && B3 != 0))); 189: end_atomic;

178: nop;

6: nop; 

7: nop; 

/* Statement flag1 = 0 */
190: begin_atomic;
191:  load t0 = B0;
192:  load t1 = B1;
193:  load t2 = B2;
194:  load t3 = B3;
195:  load t4 = B4;
196:  load t5 = B5;
197:  load t6 = B6;

 /* update predicate - B5: (flag1 = 0) */
198:   store B5 = choose(true, false);


199: assume(!(false)); 

200: end_atomic;

assert always ((pc{1} != 6) || (pc{2} != 6));


