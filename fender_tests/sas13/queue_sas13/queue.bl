shared B0, B1, B2, B3, B4, B5, B6;
local t0, t1, t2, t3, t4, t5, t6;

init
9: store B0 = *;
10: store B1 = *;
11: store B2 = *;
12: store B3 = *;
13: store B4 = *;
14: store B5 = *;
15: store B6 = *;

16: load t0 = B0;
17: load t1 = B1;
18: load t2 = B2;
19: load t3 = B3;
20: load t4 = B4;
21: load t5 = B5;
22: load t6 = B6;


23: nop; 

/* Statement head = tail */
24:  load t0 = B0;
25:  load t1 = B1;
26:  load t2 = B2;
27:  load t3 = B3;
28:  load t4 = B4;
29:  load t5 = B5;
30:  load t6 = B6;

 /* update predicate - B0: (h1 = head) */
31:   store B0 = choose((t0 != 0 && t4 == 0 && t5 != 0) || (t0 != 0 && t4 == 0 && t6 != 0) || (t0 != 0 && t2 != 0 && t3 != 0 && t4 == 0), (t6 == 0) || (t0 != 0 && t4 != 0) || (t0 != 0 && t5 == 0) || (t1 != 0 && t4 == 0) || (t1 != 0 && t5 == 0) || (t1 == 0 && t4 != 0) || (t0 != 0 && t2 != 0 && t3 == 0) || (t0 == 0 && t1 == 0 && t5 != 0) || (t0 == 0 && t4 == 0 && t5 != 0) || (t1 != 0 && t2 != 0 && t3 == 0) || (t0 == 0 && t1 == 0 && t2 != 0 && t3 != 0) || (t0 == 0 && t2 != 0 && t3 != 0 && t4 == 0));


 /* update predicate - B1: (h1 < head) */
32:   store B1 = choose((t6 == 0) || (t0 != 0 && t5 == 0) || (t1 != 0 && t4 == 0) || (t1 != 0 && t5 == 0) || (t0 != 0 && t2 != 0 && t3 == 0) || (t1 != 0 && t2 != 0 && t3 == 0), (t6 != 0) || (t0 != 0 && t4 != 0) || (t0 != 0 && t5 != 0) || (t1 == 0 && t4 != 0) || (t1 == 0 && t5 != 0) || (t0 != 0 && t2 != 0 && t3 != 0) || (t1 == 0 && t2 != 0 && t3 != 0));


 /* update predicate - B2: (h2 = head) */
33:   store B2 = choose((t2 != 0 && t3 != 0 && t4 == 0) || (t2 != 0 && t4 == 0 && t5 != 0) || (t0 != 0 && t2 != 0 && t4 == 0 && t6 != 0), (t3 == 0) || (t2 != 0 && t4 != 0) || (t2 != 0 && t5 == 0) || (t0 != 0 && t2 != 0 && t6 == 0) || (t1 != 0 && t2 != 0 && t6 != 0) || (t1 == 0 && t2 != 0 && t6 == 0) || (t2 == 0 && t4 == 0 && t5 != 0) || (t0 != 0 && t2 == 0 && t4 == 0 && t6 != 0));


 /* update predicate - B4: (tail < head) */
34:   store B4 = choose(false, true);


 /* update predicate - B5: (tail <= head) */
35:   store B5 = choose(true, false);


36: t0 = 0;
37: t1 = 0;
38: t2 = 0;
39: t3 = 0;
40: t4 = 0;
41: t5 = 0;
42: t6 = 0;


/* Reset local variables */ 
43: t0 = 0; 
44: t1 = 0; 
45: t2 = 0; 
46: t3 = 0; 
47: t4 = 0; 
48: t5 = 0; 
49: t6 = 0; 
50: assume(!((B0 != 0 && B1 != 0) || (B4 != 0 && B5 == 0) || (B0 != 0 && B4 != 0 && B6 == 0) || (B0 != 0 && B5 != 0 && B6 == 0) || (B0 != 0 && B5 == 0 && B6 != 0) || (B1 != 0 && B4 == 0 && B6 != 0) || (B1 != 0 && B5 == 0 && B6 != 0) || (B1 == 0 && B4 != 0 && B6 == 0) || (B1 == 0 && B5 != 0 && B6 == 0) || (B2 != 0 && B3 != 0 && B5 == 0) || (B2 != 0 && B3 == 0 && B4 != 0) || (B2 != 0 && B3 == 0 && B5 != 0) || (B0 != 0 && B2 != 0 && B3 != 0 && B6 == 0) || (B0 != 0 && B2 != 0 && B3 == 0 && B6 != 0) || (B1 != 0 && B2 != 0 && B3 == 0 && B6 != 0) || (B1 == 0 && B2 != 0 && B3 != 0 && B6 == 0))); 


process 1
/* ENQ */


1: nop; 

/* Statement h1 = head */
51: begin_atomic;
52:  load t0 = B0;
53:  load t1 = B1;
54:  load t2 = B2;
55:  load t3 = B3;
56:  load t4 = B4;
57:  load t5 = B5;
58:  load t6 = B6;

 /* update predicate - B0: (h1 = head) */
59:   store B0 = choose(true, false);


 /* update predicate - B1: (h1 < head) */
60:   store B1 = choose(false, true);


 /* update predicate - B6: (tail <= h1) */
61:   store B6 = choose((t4 != 0) || (t5 != 0) || (t0 != 0 && t6 != 0) || (t1 != 0 && t6 != 0) || (t2 != 0 && t3 != 0), (t5 == 0) || (t0 != 0 && t6 == 0) || (t1 == 0 && t6 == 0) || (t2 != 0 && t3 == 0));
62: t0 = 0;
63: t1 = 0;
64: t2 = 0;
65: t3 = 0;
66: t4 = 0;
67: t5 = 0;
68: t6 = 0;

69: assume(!((B0 != 0 && B1 != 0) || (B4 != 0 && B5 == 0) || (B0 != 0 && B4 != 0 && B6 == 0) || (B0 != 0 && B5 != 0 && B6 == 0) || (B0 != 0 && B5 == 0 && B6 != 0) || (B1 != 0 && B4 == 0 && B6 != 0) || (B1 != 0 && B5 == 0 && B6 != 0) || (B1 == 0 && B4 != 0 && B6 == 0) || (B1 == 0 && B5 != 0 && B6 == 0) || (B2 != 0 && B3 != 0 && B5 == 0) || (B2 != 0 && B3 == 0 && B4 != 0) || (B2 != 0 && B3 == 0 && B5 != 0) || (B0 != 0 && B2 != 0 && B3 != 0 && B6 == 0) || (B0 != 0 && B2 != 0 && B3 == 0 && B6 != 0) || (B1 != 0 && B2 != 0 && B3 == 0 && B6 != 0) || (B1 == 0 && B2 != 0 && B3 != 0 && B6 == 0))); 

70: end_atomic;
2: nop; 

3: nop; 

/* Statement head = h1 + 1 */
71: begin_atomic;
72:  load t0 = B0;
73:  load t1 = B1;
74:  load t2 = B2;
75:  load t3 = B3;
76:  load t4 = B4;
77:  load t5 = B5;
78:  load t6 = B6;

 /* update predicate - B0: (h1 = head) */
79:   store B0 = choose(false, true);


 /* update predicate - B1: (h1 < head) */
80:   store B1 = choose(true, false);


 /* update predicate - B2: (h2 = head) */
81:   store B2 = choose(false, (t0 != 0 && t2 != 0) || (t1 == 0 && t2 != 0) || (t3 == 0 && t6 != 0) || (t0 != 0 && t3 == 0 && t4 != 0) || (t0 != 0 && t3 == 0 && t5 != 0) || (t1 != 0 && t3 != 0 && t5 == 0) || (t1 == 0 && t3 == 0 && t4 != 0) || (t1 == 0 && t3 == 0 && t5 != 0) || (t2 != 0 && t4 != 0 && t6 == 0) || (t2 != 0 && t4 == 0 && t6 != 0) || (t2 != 0 && t5 == 0 && t6 != 0) || (t1 != 0 && t2 == 0 && t3 != 0 && t4 == 0));


 /* update predicate - B4: (tail < head) */
82:   store B4 = choose((t6 != 0) || (t0 != 0 && t4 != 0) || (t0 != 0 && t5 != 0) || (t1 == 0 && t4 != 0) || (t1 == 0 && t5 != 0) || (t0 != 0 && t2 != 0 && t3 != 0) || (t1 == 0 && t2 != 0 && t3 != 0), (t6 == 0) || (t0 != 0 && t5 == 0) || (t1 != 0 && t4 == 0) || (t1 != 0 && t5 == 0) || (t0 != 0 && t2 != 0 && t3 == 0) || (t1 != 0 && t2 != 0 && t3 == 0));


 /* update predicate - B5: (tail <= head) */
83:   store B5 = choose((t6 != 0) || (t0 != 0 && t4 != 0) || (t0 != 0 && t5 != 0) || (t1 == 0 && t4 != 0) || (t1 == 0 && t5 != 0) || (t0 != 0 && t2 != 0 && t3 != 0) || (t1 == 0 && t2 != 0 && t3 != 0), (t1 != 0 && t5 == 0) || (t1 != 0 && t2 != 0 && t3 == 0));


84: t0 = 0;
85: t1 = 0;
86: t2 = 0;
87: t3 = 0;
88: t4 = 0;
89: t5 = 0;
90: t6 = 0;

91: assume(!((B0 != 0 && B1 != 0) || (B4 != 0 && B5 == 0) || (B0 != 0 && B4 != 0 && B6 == 0) || (B0 != 0 && B5 != 0 && B6 == 0) || (B0 != 0 && B5 == 0 && B6 != 0) || (B1 != 0 && B4 == 0 && B6 != 0) || (B1 != 0 && B5 == 0 && B6 != 0) || (B1 == 0 && B4 != 0 && B6 == 0) || (B1 == 0 && B5 != 0 && B6 == 0) || (B2 != 0 && B3 != 0 && B5 == 0) || (B2 != 0 && B3 == 0 && B4 != 0) || (B2 != 0 && B3 == 0 && B5 != 0) || (B0 != 0 && B2 != 0 && B3 != 0 && B6 == 0) || (B0 != 0 && B2 != 0 && B3 == 0 && B6 != 0) || (B1 != 0 && B2 != 0 && B3 == 0 && B6 != 0) || (B1 == 0 && B2 != 0 && B3 != 0 && B6 == 0))); 

92: end_atomic;
/* Statement 4: goto goto 1 */ 
4:   if (true) goto 1; 


process 2
/* DEQ */


1: nop; 

/* Statement h2 = head */
93: begin_atomic;
94:  load t0 = B0;
95:  load t1 = B1;
96:  load t2 = B2;
97:  load t3 = B3;
98:  load t4 = B4;
99:  load t5 = B5;
100:  load t6 = B6;

 /* update predicate - B2: (h2 = head) */
101:   store B2 = choose(true, false);


 /* update predicate - B3: (tail <= h2) */
102:   store B3 = choose((t4 != 0) || (t5 != 0) || (t0 != 0 && t6 != 0) || (t1 != 0 && t6 != 0) || (t2 != 0 && t3 != 0), (t5 == 0) || (t0 != 0 && t6 == 0) || (t1 == 0 && t6 == 0) || (t2 != 0 && t3 == 0));


103: t0 = 0;
104: t1 = 0;
105: t2 = 0;
106: t3 = 0;
107: t4 = 0;
108: t5 = 0;
109: t6 = 0;

110: assume(!((B0 != 0 && B1 != 0) || (B4 != 0 && B5 == 0) || (B0 != 0 && B4 != 0 && B6 == 0) || (B0 != 0 && B5 != 0 && B6 == 0) || (B0 != 0 && B5 == 0 && B6 != 0) || (B1 != 0 && B4 == 0 && B6 != 0) || (B1 != 0 && B5 == 0 && B6 != 0) || (B1 == 0 && B4 != 0 && B6 == 0) || (B1 == 0 && B5 != 0 && B6 == 0) || (B2 != 0 && B3 != 0 && B5 == 0) || (B2 != 0 && B3 == 0 && B4 != 0) || (B2 != 0 && B3 == 0 && B5 != 0) || (B0 != 0 && B2 != 0 && B3 != 0 && B6 == 0) || (B0 != 0 && B2 != 0 && B3 == 0 && B6 != 0) || (B1 != 0 && B2 != 0 && B3 == 0 && B6 != 0) || (B1 == 0 && B2 != 0 && B3 != 0 && B6 == 0))); 

111: end_atomic;
3: nop; 

/* Statement if (tail >= h2) */ 

115: if (*) goto 113;
112: assume(!((B2 != 0 && B4 != 0) || (B1 != 0 && B2 != 0 && B6 != 0) || (B2 == 0 && B3 != 0 && B4 == 0 && B5 != 0))); 

/* Statement goto goto 1 */ 
116:   if (true) goto 1; 

117: if (true) goto 114;
113: nop;
118: assume(!((B3 == 0) || (B2 != 0 && B4 == 0) || (B2 != 0 && B5 == 0) || (B0 != 0 && B2 != 0 && B6 == 0) || (B1 == 0 && B2 != 0 && B6 == 0))); 

5: nop; 

6: nop; 

/* Statement tail = tail + 1 */
119: begin_atomic;
120:  load t0 = B0;
121:  load t1 = B1;
122:  load t2 = B2;
123:  load t3 = B3;
124:  load t4 = B4;
125:  load t5 = B5;
126:  load t6 = B6;

 /* update predicate - B3: (tail <= h2) */
127:   store B3 = choose((t2 != 0 && t4 != 0) || (t1 != 0 && t2 != 0 && t6 != 0) || (t2 == 0 && t3 != 0 && t4 == 0 && t5 != 0), (t3 == 0) || (t2 != 0 && t4 == 0) || (t2 != 0 && t5 == 0) || (t0 != 0 && t2 != 0 && t6 == 0) || (t1 == 0 && t2 != 0 && t6 == 0));


 /* update predicate - B4: (tail < head) */
128:   store B4 = choose(false, (t4 == 0) || (t5 == 0) || (t0 != 0 && t6 == 0) || (t1 == 0 && t6 == 0) || (t2 != 0 && t3 == 0));


 /* update predicate - B5: (tail <= head) */
129:   store B5 = choose((t4 != 0) || (t1 != 0 && t6 != 0), (t4 == 0) || (t5 == 0) || (t0 != 0 && t6 == 0) || (t1 == 0 && t6 == 0) || (t2 != 0 && t3 == 0));


 /* update predicate - B6: (tail <= h1) */
130:   store B6 = choose((t0 != 0 && t4 != 0) || (t1 == 0 && t4 != 0) || (t0 == 0 && t1 == 0 && t5 != 0) || (t0 == 0 && t1 == 0 && t2 != 0 && t3 != 0) || (t0 == 0 && t4 == 0 && t5 != 0 && t6 != 0), (t6 == 0) || (t0 != 0 && t4 == 0) || (t0 != 0 && t5 == 0) || (t1 != 0 && t4 == 0) || (t1 != 0 && t5 == 0) || (t0 != 0 && t2 != 0 && t3 == 0) || (t1 != 0 && t2 != 0 && t3 == 0));
131: t0 = 0;
132: t1 = 0;
133: t2 = 0;
134: t3 = 0;
135: t4 = 0;
136: t5 = 0;
137: t6 = 0;

138: assume(!((B0 != 0 && B1 != 0) || (B4 != 0 && B5 == 0) || (B0 != 0 && B4 != 0 && B6 == 0) || (B0 != 0 && B5 != 0 && B6 == 0) || (B0 != 0 && B5 == 0 && B6 != 0) || (B1 != 0 && B4 == 0 && B6 != 0) || (B1 != 0 && B5 == 0 && B6 != 0) || (B1 == 0 && B4 != 0 && B6 == 0) || (B1 == 0 && B5 != 0 && B6 == 0) || (B2 != 0 && B3 != 0 && B5 == 0) || (B2 != 0 && B3 == 0 && B4 != 0) || (B2 != 0 && B3 == 0 && B5 != 0) || (B0 != 0 && B2 != 0 && B3 != 0 && B6 == 0) || (B0 != 0 && B2 != 0 && B3 == 0 && B6 != 0) || (B1 != 0 && B2 != 0 && B3 == 0 && B6 != 0) || (B1 == 0 && B2 != 0 && B3 != 0 && B6 == 0))); 

139: end_atomic;
7: nop; 

114: nop;

/* Statement goto goto 1 */ 
140:   if (true) goto 1; 

/* program counters: || !(pc{1} == 2) || !(pc{2} == 5) */


assert always ( (B0 != 0 && B4 != 0) || (B1 == 0 && B4 != 0) || (B0 == 0 && B1 == 0 && B5 != 0) || (B0 == 0 && B1 == 0 && B2 != 0 && B3 != 0) || (B0 == 0 && B4 == 0 && B5 != 0 && B6 != 0)   || !(pc{1} == 2) || !(pc{2} == 5) );
